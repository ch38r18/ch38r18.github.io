[{"htmlString":"\u003cul\u003e\n\u003cli\u003e迷你播放器，\u003c/li\u003e\n\u003cli\u003e左下角，\u003c/li\u003e\n\u003cli\u003e可以代码到所有的博客文章页面\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;body\u0026gt;\r\n    \u0026lt;div class=\u0026quot;demo\u0026quot;\u0026gt;\r\n        \u0026lt;div id=\u0026quot;player1\u0026quot;\u0026gt;\r\n        \u0026lt;/div\u0026gt;\r\n    \u0026lt;/div\u0026gt;\r\n    \u0026lt;script\u0026gt;\r\n        var ap = new APlayer\r\n            ({\r\n                element: document.getElementById('player1'),\r\n                narrow: false,\r\n                fixed: true,\r\n                autoplay: false,\r\n                showlrc: true,\r\n                mini: true,\r\n                theme: '#FADFA3',\r\n                loop: 'all',\r\n                order: 'random',\r\n                preload: 'auto',\r\n                volume: 0.7,\r\n                mutex: false,\r\n                listFolded: false,\r\n                listMaxHeight: 90,\r\n                lrcType: 2,\r\n                music:\r\n                    [\r\n                        {\r\n                        ...\r\n                            }\r\n                    ]\r\n                    \r\n        });\r\n        //ap.init();\r\n    \u0026lt;/script\u0026gt;\r\n\u0026lt;/body\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/ting/20210130d%E5%B7%A6%E4%B8%8B%E8%A7%92%E8%BF%B7%E4%BD%A0%E6%92%AD%E6%94%BE/","title":"20210130d左下角迷你播放"},{"htmlString":"\u003cp\u003e\u003cstrong\u003e博客系统：hugo，开源主题：simple-blog ，免费主页：github\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e世界无限，你是唯一，我也是唯一，真的好巧啊！\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://ch38r18.ys168.com/\"\u003e到ys168给我留言\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e我们始终是凡人，总会淡出哗众取宠的舞台，总会消失在喧嚣的世界里，归于质朴，从于恬淡，从于平凡。\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n","permalink":"/","title":"chr63写点人生note"},{"htmlString":"\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n","permalink":"/ting/","title":"🎧 音频播放"},{"htmlString":"\u003cp\u003e \n \n \u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e自己用别人的音频js\u003c/li\u003e\n\u003cli\u003e方便省事，不需要挑选歌曲。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e\t\u0026lt;body\u0026gt;\r\n\r\n\t\u0026lt;meting-js server=\u0026quot;netease\u0026quot; type=\u0026quot;playlist\u0026quot; id=\u0026quot;60198\u0026quot;\u0026gt;\u0026lt;/meting-js\u0026gt;\r\n\t\t\r\n\t\u0026lt;/body\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e解析：server=\u0026ldquo;netease\u0026rdquo; type=\u0026ldquo;playlist\u0026rdquo; id=\u0026ldquo;60198\u0026rdquo;\u003c/li\u003e\n\u003cli\u003eserver指音乐平台，netease指网易云音乐，\u003c/li\u003e\n\u003cli\u003etype类型，\u003c/li\u003e\n\u003cli\u003eplaylist列表，id指歌曲的i或者专辑或列表外链id\u003c/li\u003e\n\u003cli\u003e因此重点在于指定平台，指定外链id\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e中文版选项\u003c/strong\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e选项\u003c/th\u003e\n\u003cth\u003e默认\u003c/th\u003e\n\u003cth\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eid(编号)\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003erequire\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e歌曲ID /播放列表ID /专辑ID /搜索关键字\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eserver(平台)\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003erequire\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e音乐平台：\u003ccode\u003enetease\u003c/code\u003e，\u003ccode\u003etencent\u003c/code\u003e，\u003ccode\u003ekugou\u003c/code\u003e，\u003ccode\u003exiami\u003c/code\u003e，\u003ccode\u003ebaidu\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etype（类型）\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003erequire\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003esong\u003c/code\u003e，\u003ccode\u003eplaylist\u003c/code\u003e，\u003ccode\u003ealbum\u003c/code\u003e，\u003ccode\u003esearch\u003c/code\u003e，\u003ccode\u003eartist\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eauto（支持类种 类）\u003c/td\u003e\n\u003ctd\u003eoptions\u003c/td\u003e\n\u003ctd\u003e音乐链接，支持：\u003ccode\u003enetease\u003c/code\u003e，\u003ccode\u003etencent\u003c/code\u003e，\u003ccode\u003exiami\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003efixed（固定模式）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用固定模式，默认\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emini（迷你模式）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用迷你模式,默认\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eautoplay（自动播放）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e音频自动播放，默认\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etheme(主题颜色)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e#2980b9\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e默认\u003ccode\u003e#2980b9\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eloop（循环）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eall\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e播放器循环播放，值：“all”，one”，“none”\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eorder(顺序)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003elist\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e播放器播放顺序，值：“list”，“random”\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epreload(加载)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eauto\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e值：“none”，“metadata”，“\u0026lsquo;auto”\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003evolume（声量）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e0.7\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e默认音量，请注意播放器会记住用户设置，用户自己设置音量后默认音量将不起作用\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emutex（限制）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e防止同时播放多个玩家，在该玩家开始播放时暂停其他玩家\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elrc-type（歌词）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e0\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e歌词显示\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elist-folded（列表折叠）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e指示列表是否应该首先折叠\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elist-max-height（最大高度）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e340px\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e列出最大高度\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estorage-name（储存名称）\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003emetingjs\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e存储播放器设置的localStorage键\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n","permalink":"/ting/20210130f%E5%88%AB%E4%BA%BA%E7%9A%84%E6%AD%8C%E5%8D%95/","title":"20210130f别人的歌单"},{"htmlString":"\u003cp\u003e \n \n \u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e自己选择音频\u003c/li\u003e\n\u003cli\u003e为什么不自动播放呢？\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;body\u0026gt;\r\n    \u0026lt;div class=\u0026quot;demo\u0026quot;\u0026gt;\r\n        \u0026lt;div id=\u0026quot;player1\u0026quot;\u0026gt;\r\n        \u0026lt;/div\u0026gt;\r\n    \u0026lt;/div\u0026gt;\r\n    \u0026lt;script\u0026gt;\r\n        var ap = new APlayer\r\n            ({\r\n                container: document.getElementById('player1'),\r\n                autoplay: true,\r\n                showlrc: true,\r\n                theme: '#b7daff',\r\n                loop: 'all',\r\n                order: 'list',\r\n                preload: 'auto',\r\n                volume: 0.7,\r\n                mutex: true,\r\n                listFolded: false,\r\n                listMaxHeight: 300,\r\n                lrcType: 2,\r\n                music:\r\n                    [\r\n                        {\r\n                        ...\r\n                            }\r\n                    ]\r\n                    \r\n        });\r\n        //ap.init();\r\n    \u0026lt;/script\u0026gt;\r\n\u0026lt;/body\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/ting/20210130e%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B/","title":"20210130e自己动手"},{"htmlString":"\n\u003ch3 id=\"hugo添加音频播放器\"\u003e\u003ca href=\"#hugo%e6%b7%bb%e5%8a%a0%e9%9f%b3%e9%a2%91%e6%92%ad%e6%94%be%e5%99%a8\"\u003ehugo添加音频播放器\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e方法来源于网络\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAplayer中文文档 \u003ccode\u003ehttps://aplayer.js.org/#/zh-Hans/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e方法来源 \u003ccode\u003ehttps://corpython.github.io/post/hugo添加音乐最终章之悬浮音乐播放器/\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e实现方法\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e主题文件夹下新建 \u003ccode\u003elayouts/partials/ting.html\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html\u0026gt;\n  \n\u0026lt;head\u0026gt;\n    \u0026lt;!-- require APlayer --\u0026gt;\n    \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\u0026quot;\u0026gt;\n    \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\n    \u0026lt;!-- require MetingJS --\u0026gt;\n    \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;/head\u0026gt;\n  \n\u0026lt;body\u0026gt;\n    \u0026lt;div class=\u0026quot;demo\u0026quot;\u0026gt;\n        \u0026lt;div id=\u0026quot;player1\u0026quot;\u0026gt;\n        \u0026lt;/div\u0026gt;\n    \u0026lt;/div\u0026gt;\n    \u0026lt;script\u0026gt;\n        var ap = new APlayer\n            ({\n                element: document.getElementById('player1'),\n                narrow: false,\n                fixed: true,\n                autoplay: false,\n                showlrc: true,\n                mini: true,\n                theme: '#FADFA3',\n                loop: 'all',\n                order: 'random',\n                preload: 'auto',\n                volume: 0.7,\n                mutex: false,\n                listFolded: false,\n                listMaxHeight: 90,\n                lrcType: 2,\n      music[\n          {\n              name:' ',\n              artists:' ',\n              url:' ',\n              cover:' '\n              lrc:' ',\n          },\n          {\n              name:' ',\n              ...\n          }\n      ]\n  \n        });\n        //ap.init();\n    \u0026lt;/script\u0026gt;\n\u0026lt;/body\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e在主题文件夹 \u003ccode\u003elayouts/_default/single.html\u003c/code\u003e 添加代码 \u003ccode\u003e{{ partial \u0026quot;ting.html\u0026quot; . }}\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e自定义音频 \u003ccode\u003elayouts/partials/ting.html\u003c/code\u003e中添加，一对 \u003ccode\u003e{ }\u003c/code\u003e 一个音频\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003emusic[\n  {\n      name:' ',\n      artists:' ',\n      url:' ',\n      cover:' '\n      lrc:' ',\n  },\n  {\n      name:' ',\n      ...\n  }\n]\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e找歌曲外链 \u003ca href=\"http://www.guqiankun.com/tools/music/?source=music163\"\u003e一个网站\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e问题，如何实现自己上传的音频？\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/hugo/20210130c%E6%B7%BB%E5%8A%A0%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8/","title":"20210130c添加音频播放器"},{"htmlString":"","permalink":"/hugo/","title":"💾 hugo"},{"htmlString":"\n\u003ch3 id=\"感谢你的hugo主题\"\u003e\u003ca href=\"#%e6%84%9f%e8%b0%a2%e4%bd%a0%e7%9a%84hugo%e4%b8%bb%e9%a2%98\"\u003e感谢你的hugo主题\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e感谢你的主题，我还给自己添加了一个相册\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e\n本人小白，用网页翻译弄博客。在手机上看到termux可以做github page，于是从hexo开始，不断的搜索，发现好多人都从hexo转到hugo了，我又开始搜索hugo。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e\nhugo的主题好难找，我搜索看到你的主题（2021.01.26左右），很喜欢，就拷贝了下来。直接就可以用，其他的很多主题都用不了，我也不知道什么原因，代码知识基本没有。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e\n感谢你的主题！\n感谢你的主题！\n感谢你的主题！\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e4.\u003c/strong\u003e\n前2天看你更新了，从新拷贝了，就报错，用不了，我就沿用之前的。\u003c/p\u003e\n\u003cp\u003e昨天2021.01.29，我无意发现一个添加相册的办法，按照网上的步骤，相册也搞定了。但是 在 \u003c!-- raw HTML omitted --\u003e.github.io 无法显示照片，本来想问一下你，有没有什么办法的。结果刚才2021-01-30 11:47 无意中搞定了。主题文件夹下 \u003ccode\u003elayouts\\_default\\photos.html\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e代码 \u003ccode\u003e\u0026lt;img src=\u0026quot;{{ . | absURL }}{{ .Name }}\u0026quot; alt=\u0026quot;{{ .Name }}\u0026quot;  style=\u0026quot;width:100%\u0026quot;/\u0026gt;\u003c/code\u003e 解决了相册图片不显示的问题\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e5.\u003c/strong\u003e\n再次感谢你的主题。\u003c/p\u003e\n","permalink":"/note/20210130b%E6%84%9F%E8%B0%A2%E4%BD%A0%E7%9A%84hugo%E4%B8%BB%E9%A2%98/","title":"20210130b感谢你的hugo主题"},{"htmlString":"","permalink":"/note/","title":"✍️ 笔记"},{"htmlString":"\u003cp\u003evia.\u003c/p\u003e\n\n\u003ch3 id=\"开源一个-android-图片压缩框架\"\u003e\u003ca href=\"#%e5%bc%80%e6%ba%90%e4%b8%80%e4%b8%aa-android-%e5%9b%be%e7%89%87%e5%8e%8b%e7%bc%a9%e6%a1%86%e6%9e%b6\"\u003e开源一个 Android 图片压缩框架\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e在我们的业务场景中，需要使用客户端采集图片，上传服务器，然后对图片信息进行识别。为了提升程序的性能，我们需要保证图片上传服务器的速度的同时，保证用于识别图片的质量。整个优化包括两个方面的内容：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e相机拍照的优化：包括相机参数的选择、预览、启动速度和照片质量等；\n图片压缩的优化：基于拍摄的图片和从相册中选择的图片进行压缩，控制图片大小和尺寸。\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在本文中，我们主要介绍图片压缩优化，后续我们会介绍如何对 Android 的相机进行封装和优化。本项目主要基于 Android 自带的图片压缩 API 进行封装，结合了 Luban 和 Compressor 的优点，同时提供了用户自定义压缩策略的接口。该项目的主要目的在于，统一图片压缩框库的实现，集成常用的两种图片压缩算法，让你以更低的成本集成图片压缩功能到自己的项目中。\n1、图片压缩的基础知识\u003c/p\u003e\n\u003cp\u003e对于一般业务场景，当我们展示图片的时候，Glide 会帮我们处理加载的图片的尺寸问题。但在把采集来的图片上传到服务器之前，为了节省流量，我们需要对图片进行压缩。\u003c/p\u003e\n\u003cp\u003e在 Android 平台上，默认提供的压缩有三种方式：质量压缩和两种尺寸压缩，邻近采样以及双线性采样。下面我们简单介绍下者三种压缩方式都是如何使用的：\n1.1 质量压缩\u003c/p\u003e\n\u003cp\u003e所谓的质量压缩就是下面的这行代码，它是 Bitmap 的方法。当我们得到了 Bitmap 的时候，即可使用这个方法来实现质量压缩。它一般位于我们所有压缩方法的最后一步。\u003c/p\u003e\n\u003cp\u003ecompress(CompressFormat format, int quality, OutputStream stream)\n复制代码\u003c/p\u003e\n\u003cp\u003e该方法接受三个参数，其含义分别如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eformat：枚举，有三个选项 JPEG, PNG 和 WEBP，表示图片的格式；\nquality：图片的质量，取值在 [0,100] 之间，表示图片质量，越大，图片的质量越高；\nstream：一个输出流，通常是我们压缩结果输出的文件的流\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e1.2 邻近采样\u003c/p\u003e\n\u003cp\u003e邻近采样基于临近点插值算法，用像素代替周围的像素。邻近采样的核心代码只有下面三行，\u003c/p\u003e\n\u003cp\u003eBitmapFactory.Options options = new BitmapFactory.Options();\noptions.inSampleSize = 1;\nBitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.blue_red, options);\n复制代码\u003c/p\u003e\n\u003cp\u003e邻近采样核心的地方在于 inSampleSize 的计算。它通常是我们使用的压缩算法的第一步。我们可以通过设置 inSampleSize 来得到原始图片采样之后的结果，而不是将原始的图片全部加载到内存中，以防止 OOM。标准使用姿势如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eBitmapFactory.Options options = new BitmapFactory.Options();\noptions.inJustDecodeBounds = true;\noptions.inSampleSize = 1;\nBitmapFactory.decodeStream(srcImg.open(), null, options);\nthis.srcWidth = options.outWidth;\nthis.srcHeight = options.outHeight;\n\n\noptions.inJustDecodeBounds = false;\noptions.inSampleSize = calInSampleSize();\nBitmap bitmap = BitmapFactory.decodeStream(srcImg.open(), null, options);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e复制代码\u003c/p\u003e\n\u003cp\u003e这里主要分成两个步骤，它们各自的含义是：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e先通过设置 Options 的 inJustDecodeBounds 为 true，来加载图片，以得到图片的尺寸信息。此时图片不会被加载到内存中，所以不会造成 OOM，同时我们可以通过 Options 得到原图的尺寸信息。\n根据上一步中得到的图片的尺寸信息，计算一个 inSampleSize，然后将 inJustDecodeBounds 设置为 false，以加载采样之后的图片到内存中。\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e关于 inSampleSize 需要简单说明一下：inSampleSize 代表压缩后的图像一个像素点代表了原来的几个像素点，例如 inSampleSize 为 4，则压缩后的图像的宽高是原来的 1/4，像素点数是原来的 1/16，inSampleSize 一般会选择 2 的指数，如果不是 2 的指数，内部计算的时候也会向 2 的指数靠近。所以，实际使用过程中，我们会通过明确指定 inSampleSize 为 2 的指数，来避免内部计算导致的不确定性。\n1.3 双线性采样\u003c/p\u003e\n\u003cp\u003e邻近采样可以对图片的尺寸进行有效的控制，但是它存在几个问题。比如，当我需要把图片的宽度压缩到 1200 左右的时候，如果原始的图片的宽度压是 3200，那么我只能通过设置 inSampleSize 将采样率设置为 2 来将其压缩到 1600. 此时图片的尺寸比我们的要求要大。就是说，邻近采样无法对图片的尺寸进行更加精准的控制。如果需要对图片尺寸进行更加精准的控制，那么就需要使用双线性压缩了。\u003c/p\u003e\n\u003cp\u003e双线性采样采用双线性插值算法，相比邻近采样简单粗暴的选择一个像素点代替其他像素点，双线性采样参考源像素相应位置周围 2x2 个点的值，根据相对位置取对应的权重，经过计算得到目标图像。\u003c/p\u003e\n\u003cp\u003e它在 Android 中的使用也比较简单，\u003c/p\u003e\n\u003cp\u003eBitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.blue_red);\nMatrix matrix = new Matrix();\nmatrix.setScale(0.5f, 0.5f);\nBitmap sclaedBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth()/2, bitmap.getHeight()/2, matrix, true);\n复制代码\u003c/p\u003e\n\u003cp\u003e也就是对得到的 Bitmap 应用 createBitmap() 进行处理，并传入 Matrix 指定图片尺寸放缩的比例。该方法返回的 Bitmap 就是双线性压缩之后的结果。\n1.4 图片压缩算法总结\u003c/p\u003e\n\u003cp\u003e在实际使用过程中，我们通常会结合三种压缩方式使用，一般使用的步骤如下，\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e使用邻近采样对原始的图片进行采样，将图片控制到比目标尺寸稍大的大小，防止 OOM；\n使用双线性采样对图片的尺寸进行压缩，控制图片的尺寸为目标的大小；\n对上述两个步骤之后得到的图片 Bitmap 进行质量压缩，并将其输出到磁盘上。\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e当然，本质上 Android 图片的编码是由 Skia 库来完成的，所以，除了使用 Android 自带的库进行压缩，我们还可以调用外部的库进行压缩。为了追求更高的压缩效率，通常我们会在 Native 层对图片进行处理，这将涉及 JNI 的知识。笔者曾在之前的文章 《在 Android 中使用 JNI 的总结》 中介绍过 Android 平台上 JNI 的调用的常规思路，感兴趣的同学可以参考下。\n2、Github 上的开源的图片压缩库\u003c/p\u003e\n\u003cp\u003e现在 Github 上的图片压缩框架主要有 Luban 和 Compressor 两个。Star 的数量也比较高，一个 9K，另一个 4K. 但是，这两个图片压缩的库有各自的优点和缺点。下面我们通过一个表格总结一下：\n框架\t优点\t缺点\nLuban\t据说是根据微信图片压缩逆推的算法\t1.只适用于一般的图片展示的场景，无法对图片的尺寸进行精准压缩；2.内部封装 AsyncTaks 来进行异步的图片压缩，对于 RxJava 支持不好。\nCompressor\t1.可以对图片的尺寸进行压缩；2.支持 RxJava。\t1.尺寸压缩的场景有限，如果有特别的需求，则需要手动修改源代码；2.图片压缩采样的时候计算有问题，导致采样后的图片尺寸总是小于我们指定的尺寸\u003c/p\u003e\n\u003cp\u003e上面的图表已经总结得很详细了。所以，根据上面的两个库各自的优缺点，我们打算开发一个新的图片压缩框架。它满足下面的功能：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e支持 RxJava：我们可以像使用 Compressor 的时候那样，指定图片压缩的线程和结果监听的线程；\n支持 Luban 压缩算法：Luban 压缩算法核心的部分只在于 inSampleSize 的计算，因此，我们可以很容易得将其集成到我们的新的库中。之所以加入 Luban，是为了让我们的库可以适用于一般图片展示的场景。用户无需指定图片的尺寸，用起来省心省力。\n支持 Compressor 压缩算法同时指定更多的参数：Compressor 压缩算法就是我们上述提到的三种压缩算法的总和。不过，当要压缩的宽高比与原始图片的宽高比不一致的时候，它只提供了一种情景。下文中介绍我们框架的时候会说明进行更详细的说明。当然，你可以在调用框架的方法之前主动去计算出一个宽高比，但是你需要把图片压缩的第一个阶段主动走一遍，费心费力。\n提供用户自定义压缩算法的接口：我们希望设计的库可以允许用户自定义压缩策略。在想要替换图片压缩算法的时候，通过链式调用的一个方法直接更换策略即可。即，我们希望能够让用户以最低的成本替换项目中的图片压缩算法。\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e3、项目整体架构\u003c/p\u003e\n\u003cp\u003e以下是我们的图片压缩框架的整体架构，这里我们只列举除了其中核心的部分代码。这里的 Compress 是我们的链式调用的起点，我们可以用它来指定图片压缩的基本参数。然后，当我们使用它的 strategy() 方法之后，方法将进入到图片压缩策略中，此时，我们继续链式调用压缩策略的自定义方法，个性化地设置各压缩策略自己的参数：\u003c/p\u003e\n\u003cp\u003e项目整体架构\u003c/p\u003e\n\u003cp\u003e这里的所有的压缩策略都继承自抽线的基类 AbstractStrategy，它提供了两个默认的实现 Luban 和 Compressor. 接口 CompressListener 和 CacheNameFactory 分别用来监听图片压缩进度和自定义压缩的图片的名称。下面的三个是图片相关的工具类，用户可以调用它们来实现自己压缩策略。\n4、使用\u003c/p\u003e\n\u003cp\u003e首先，在项目的 Gradle 中加入我的 Maven 仓库的地址：\u003c/p\u003e\n\u003cp\u003emaven { url \u0026ldquo;\u003ca href=\"https://dl.bintray.com/easymark/Android%22\"\u003ehttps://dl.bintray.com/easymark/Android\u0026quot;\u003c/a\u003e }\n复制代码\u003c/p\u003e\n\u003cp\u003e然后，在你的项目的依赖中，添加该库的依赖：\u003c/p\u003e\n\u003cp\u003eimplementation \u0026lsquo;me.shouheng.compressor:compressor:0.0.1\u0026rsquo;\n复制代码\u003c/p\u003e\n\u003cp\u003e然后，就可以在项目中使用了。你可以参考 Sample 项目的使用方式。不过，下面我们还是对它的一些 API 做简单的说明。\n4.1 Luban 的使用\u003c/p\u003e\n\u003cp\u003e下面是 Luban 压缩策略的使用示例，它与 Luban 库的使用类似。只是在 Luban 的库的基础上，我们增加了一个 copy 的选项，用来表示当图片因为小于指定的大小而没有被压缩之后，是否将原始的图片拷贝到指定的目录。因为，比如当你使用回调获取图片压缩结果的时候，如果按照 Luban 库的逻辑，你得到的是原始的图片，所以，此时你需要额外进行判断。因此，我们增加了这个布尔类型的参数，你可以通过它指定将原始文件进行拷贝，这样你就不需要在回调中对是否是原始图片进行判断了。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eval luban = Compress.with(this, file)\n    \n    .setCompressListener(object : CompressListener{\n        override fun onStart() {\n            LogUtils.d(Thread.currentThread().toString())\n            Toast.makeText(this@MainActivity, \u0026quot;Compress Start\u0026quot;, Toast.LENGTH_SHORT).show()\n        }\n\n        override fun onSuccess(result: File?) {\n            LogUtils.d(Thread.currentThread().toString())\n            displayResult(result?.absolutePath)\n            Toast.makeText(this@MainActivity, \u0026quot;Compress Success : $result\u0026quot;, Toast.LENGTH_SHORT).show()\n        }\n\n        override fun onError(throwable: Throwable?) {\n            LogUtils.d(Thread.currentThread().toString())\n            Toast.makeText(this@MainActivity, \u0026quot;Compress Error ：$throwable\u0026quot;, Toast.LENGTH_SHORT).show()\n        }\n    })\n    \n    .setCacheNameFactory { System.currentTimeMillis().toString() }\n    \n    .setQuality(80)\n    \n    .strategy(Strategies.luban())\n    \n    .setIgnoreSize(100, copy)\n\n    \n    \n    val d = luban.asFlowable()\n        .subscribeOn(Schedulers.io())\n        .observeOn(AndroidSchedulers.mainThread())\n        .subscribe { displayResult(it.absolutePath) }\n\n    \n    luban.launch()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e复制代码\u003c/p\u003e\n\u003cp\u003e4.2 Compressor 的使用\u003c/p\u003e\n\u003cp\u003e下面是 Compressor 压缩策略的基本的使用，在调用 strategy() 方法指定压缩策略之前，你的任务与 Luban 一致。所以，如果你需要更换图片压缩算法的时候，直接使用 strategy() 方法更换策略即可，前面部分的逻辑无需改动，因此，可以降低你更换压缩策略的成本。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eval compressor = Compress.with(this, file)\n    .setQuality(60)\n    .setTargetDir(\u0026quot;\u0026quot;)\n    .setCompressListener(object : CompressListener {\n        override fun onStart() {\n            LogUtils.d(Thread.currentThread().toString())\n            Toast.makeText(this@MainActivity, \u0026quot;Compress Start\u0026quot;, Toast.LENGTH_SHORT).show()\n        }\n\n        override fun onSuccess(result: File?) {\n            LogUtils.d(Thread.currentThread().toString())\n            displayResult(result?.absolutePath)\n            Toast.makeText(this@MainActivity, \u0026quot;Compress Success : $result\u0026quot;, Toast.LENGTH_SHORT).show()\n        }\n\n        override fun onError(throwable: Throwable?) {\n            LogUtils.d(Thread.currentThread().toString())\n            Toast.makeText(this@MainActivity, \u0026quot;Compress Error ：$throwable\u0026quot;, Toast.LENGTH_SHORT).show()\n        }\n    })\n    .strategy(Strategies.compressor())\n    .setMaxHeight(100f)\n    .setMaxWidth(100f)\n    .setScaleMode(Configuration.SCALE_SMALLER)\n    .launch()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e复制代码\u003c/p\u003e\n\u003cp\u003e这里的 setMaxHeight(100f) 和 setMaxWidth(100f) 用来表示图片压缩的目标大小。具体的大小是如何计算的呢？在 Compressor 库中你是无法确定的，但是在我们的库中，你可以通过 setScaleMode() 方法来指定。这个方法接收一个整数类型的枚举，它的取值范围有 4 个，即 SCALE_LARGER, SCALE_SMALLER, SCALE_WIDTH 和 SCALE_HEIGHT，它们具体的含义我们会进行详细说明。这里我们默认的压缩方式是 SCALE_LARGER，也就是 Compressor 库的压缩方式。那么这四个参数分别是什么含义呢？\u003c/p\u003e\n\u003cp\u003e这里我们以一个例子来说明，假设有一个图片的宽度是 1000，高度是 500，简写作 (W:1000, H:500)，通过 setMaxHeight() 和 setMaxWidth() 指定的参数均为 100，那么，就称目标图片的尺寸，宽度是 100，高度是 100，简写作 (W:100, H:100)。那么按照上面的四种压缩方式，最终的结果将是：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eSCALE_LARGER：对高度和长度中较大的一个进行压缩，另一个自适应，因此压缩结果是 (W:100, H:50). 也就是说，因为原始图片宽高比 2:1，我们需要保持这个宽高比之后再压缩。而目标宽高比是 1:1. 而原图的宽度比较大，所以，我们选择将宽度作为压缩的基准，宽度缩小 10 倍，高度也缩小 10 倍。这是 Compressor 库的默认压缩策略，显然它只是优先使得到的图片更小。这在一般情景中没有问题，但是当你想把短边控制在 100 就无计可施了（需要计算之后再传参），此时可以使用 SCALE_SMALLER。\nSCALE_SMALLER：对高度和长度中较大的一个进行压缩，另一个自适应，因此压缩结果是 (W:200, H:100). 也就是，高度缩小 5 倍之后，达到目标 100，然后宽度缩小 5 倍，达到 200.\nSCALE_WIDTH：对宽度进行压缩，高度自适应。因此得到的结果与 SCALE_LARGER 一致。\nSCALE_HEIGHT：对高度进行压缩，宽度自适应，因此得到的结果与 SCALE_HEIGHT 一致。\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e4.3 自定义策略\u003c/p\u003e\n\u003cp\u003e自定义一个图片压缩策略也是很简单的，你可以通过继承 SimpleStrategy 或者直接继承 AbstractStrategy 来实现：\u003c/p\u003e\n\u003cp\u003eclass MySimpleStrategy: SimpleStrategy() {\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eoverride fun calInSampleSize(): Int {\n    return 2\n}\n\nfun myLogic(): MySimpleStrategy {\n    return this\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\n复制代码\u003c/p\u003e\n\u003cp\u003e注意下，如果想要实现链式的调用，自定义压缩策略的方法需要返回自身。\n5、最后\u003c/p\u003e\n\u003cp\u003e因为我们的项目中，需要把图片的短边控制到 1200，长变只适应，只通过改变 Luban 来改变采样率只能把边长控制到一个范围中，无法精准压缩。所以，我们想到了 Compressor，并提出了 SCALE_SMALLER 的压缩模式. 但是 Luban 也不是用不到，一般用来展示的图片的压缩，它用起来更加方便。因此，我们在库中综合了两个框架，其实代码量并不大。当然，为了让我们的库功能更加丰富，因此我们提出了自定义压缩策略的接口，也是用来降低压缩策略的更换成本吧。\u003c/p\u003e\n\u003cp\u003e最后项目开源在 Github，地址是：github.com/Shouheng88/…. 欢迎 Star 和 Fork，为该项目贡献代码或者提出 issue :)\u003c/p\u003e\n\u003cp\u003e后续，笔者会对 Android 端的相机优化和 JNI 操作 OpenCV 进行图片处理进行讲解，感兴趣的关注作者呦 :)\u003c/p\u003e\n\u003cp\u003e以上，感谢阅读～\u003c/p\u003e\n","permalink":"/via/20210130b/","title":"20210130b"},{"htmlString":"","permalink":"/via/","title":"📚 摘录"},{"htmlString":"\n\u003ch3 id=\"软件清单\"\u003e\u003ca href=\"#%e8%bd%af%e4%bb%b6%e6%b8%85%e5%8d%95\"\u003e软件清单\u003c/a\u003e\u003c/h3\u003e","permalink":"/list/20210129f%E8%BD%AF%E4%BB%B6/","title":"20210129f软件"},{"htmlString":"","permalink":"/list/","title":"🖐 清单"},{"htmlString":"\n\u003ch3 id=\"添加相册\"\u003e\u003ca href=\"#%e6%b7%bb%e5%8a%a0%e7%9b%b8%e5%86%8c\"\u003e添加相册\u003c/a\u003e\u003c/h3\u003e\n\u003ch3 id=\"hugo添加相册页面\"\u003e\u003ca href=\"#hugo%e6%b7%bb%e5%8a%a0%e7%9b%b8%e5%86%8c%e9%a1%b5%e9%9d%a2\"\u003ehugo添加相册页面\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e功能：把指定文件夹的图片展示在页面上\u003c/p\u003e\n\u003cp\u003e日常操作：把图片放到 \u003ccode\u003estatic/photos\u003c/code\u003e 中即可，搭配 Github Action 自动化部署\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003estatic\n└── photos\n    ├── 1.jpeg\n    ├── 2.jpeg\n    └── 3.jpeg\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"集成到我的主题中\"\u003e\u003ca href=\"#%e9%9b%86%e6%88%90%e5%88%b0%e6%88%91%e7%9a%84%e4%b8%bb%e9%a2%98%e4%b8%ad\"\u003e集成到我的主题中\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e把照片放入 \u003ccode\u003estatic/photos\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e创建\u003ccode\u003econtent/photos/_index.md\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e---\ntitle: \u0026quot;⚛ 我的相册\u0026quot;\nlayout: \u0026quot;photos\u0026quot;\n---\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e新建 \u003ccode\u003elayouts/_default/photos.html\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e{{ define \u0026quot;main\u0026quot; }}\n\u0026lt;div class=\u0026quot;post\u0026quot;\u0026gt;\n  \u0026lt;h2 class=\u0026quot;post-title\u0026quot;\u0026gt;{{.Title}}\u0026lt;/h2\u0026gt;\n\u0026lt;/div\u0026gt;\n\n\u0026lt;div class=\u0026quot;page-photos\u0026quot;\u0026gt;\n  {{ range (readDir \u0026quot;./static/photos\u0026quot;) }}\n  \u0026lt;figure\u0026gt;\n    \u0026lt;img src=\u0026quot;{{\u0026quot;photos/\u0026quot; | absURL }}{{ .Name }}\u0026quot; alt=\u0026quot;{{ .Name }}\u0026quot; /\u0026gt; alt=\u0026quot;{{ .Name }}\u0026quot; /\u0026gt;\n    \u0026lt;figcaption\u0026gt;{{ .Name | replaceRE \u0026quot;(.*)[.].*\u0026quot; \u0026quot;$1\u0026quot;}}\u0026lt;/figcaption\u0026gt;\n  \u0026lt;/figure\u0026gt;\n  {{ end }}\n\u0026lt;/div\u0026gt;\n{{ end }}\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e方法一：css设置图片样式，新建 \u003ccode\u003estatic\\css\\photos.css\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e.page-photos figure img{\n  max-width:80%;\n  margin:0 auto 3rem;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e方法一：修改\u003ccode\u003elayouts/_default/photos.html\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e...\n    \u0026lt;figcaption\u0026gt;{{ .Name | replaceRE \u0026quot;(.*)[.].*\u0026quot; \u0026quot;$1\u0026quot;}}\u0026lt;/figcaption\u0026gt;\n    \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;{{ \u0026quot;css/photos.css\u0026quot; | absURL }}\u0026quot;\u0026gt;\n  \u0026lt;/figure\u0026gt;\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e方法二：在\u003ccode\u003elayouts/_default/photos.html\u003c/code\u003e直接设置图片的样式代码\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e...\n\u0026lt;/div\u0026gt;\n\n\u0026lt;style\u0026gt;\nimg {\n    max-width: 100%;\n    height: auto;\n}\n\u0026lt;/style\u0026gt;\n\n\u0026lt;div class=\u0026quot;page-photos\u0026quot;\u0026gt;\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e现在就可以通过添加图片来，查看图片的样子了\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/hugo/20210129f%E5%88%B6%E4%BD%9C%E7%9B%B8%E5%86%8C/","title":"20210129f制作相册"},{"htmlString":"","permalink":"/links/","title":"🔗 网址链接"},{"htmlString":"\n\u003ch3 id=\"hugo基本操作\"\u003e\u003ca href=\"#hugo%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c\"\u003ehugo基本操作\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e不需要生成静态网页\u003c/li\u003e\n\u003cli\u003ehugo server 就可以本机浏览器查看，局域网不行\u003c/li\u003e\n\u003cli\u003ehugo 生成静态网页文件夹public，为了上传到远程的仓库\u003c/li\u003e\n\u003cli\u003ehugo new 文件夹/文件名.md\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"主题与配置文件\"\u003e\u003ca href=\"#%e4%b8%bb%e9%a2%98%e4%b8%8e%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6\"\u003e主题与配置文件\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e主题文件夹 \u003ccode\u003eexampleSite/config.toml\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e复制到根目录，\u003c/li\u003e\n\u003cli\u003e有[[menu.main]]即配置导航菜单\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e [[menu.main]]\n   identifier = \u0026quot;blog\u0026quot;\n   name       = \u0026quot;Blogs\u0026quot;\n   url        = \u0026quot;/posts\u0026quot;\n [[menu.main]]\n   name       = \u0026quot;Categories\u0026quot;\n   identifier = \u0026quot;categories\u0026quot;\n   url        = \u0026quot;/categories/\u0026quot;\n [[menu.main]]\n   identifier = \u0026quot;tags\u0026quot;\n   name       = \u0026quot;Tags\u0026quot;\n   url        = \u0026quot;/tags/\u0026quot;\n [[menu.main]]\n   identifier = \u0026quot;about\u0026quot;\n   name       = \u0026quot;About\u0026quot;\n   url        = \u0026quot;about/\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e有[[params.social]]即配置图标链接\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e[[params.social]]\nname = \u0026quot;email\u0026quot;\nurl  = \u0026quot;mailto:untilthecore@gmail.com\u0026quot;\n\n[[params.social]]\nname = \u0026quot;github\u0026quot;\nurl  = \u0026quot;https://github.com/UntilTheCore\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003ebaseurl：配置站点基址，如果要放在github上或者自己的云服务器上，请正确配置地址，否则出了能访问主页，其他地方都是 404\u003c/li\u003e\n\u003cli\u003etitle：设置标题\u003c/li\u003e\n\u003cli\u003elanguageCode：设置语言\u003c/li\u003e\n\u003cli\u003etheme：设置主题\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/hugo/20210129c%E4%B8%BB%E9%A2%98%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","title":"20210129c主题与配置文件"},{"htmlString":"\n\u003ch3 id=\"开始hugo的博客之旅\"\u003e\u003ca href=\"#%e5%bc%80%e5%a7%8bhugo%e7%9a%84%e5%8d%9a%e5%ae%a2%e4%b9%8b%e6%97%85\"\u003e开始hugo的博客之旅\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e用md编辑器整理自己的所有东西，当想发布的时候，就把要分享的文章分享出去\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e第一个问题时区\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e新建文件的固定格式 \t\u003ccode\u003earchetypes\\default.md\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003etitle: \u0026quot;{{ replace .Name \u0026quot;-\u0026quot; \u0026quot; \u0026quot; | title }}\u0026quot;\ndate: {{ .Date }}\ndraft: true\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e修改：draft草稿、date时区问题\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003etitle: \u0026quot;{{ replace .Name \u0026quot;-\u0026quot; \u0026quot; \u0026quot; | title }}\u0026quot;\ndate: {{.Date}}+08:00\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePC端的date 有时区，手机termux端没有时区，怎么办\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e第二个问题局域网查看\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e局域网查看命令和\u003ccode\u003ehexo s\u003c/code\u003e不一样，不能只用\u003ccode\u003ehugo\u003c/code\u003e 还得又其他参数。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehugo server -b \u0026quot;http://192.168.199.216\u0026quot; --bind \u0026quot;192.168.199.216\u0026quot;\nhugo server -b \u0026quot;http://192.168.199.218\u0026quot; --bind \u0026quot;192.168.199.218\u0026quot;\nhugo server -b \u0026quot;http://192.168.199.216\u0026quot; -p 8080 --bind \u0026quot;192.168.199.216\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e第三个问题上传hugo到github仓库\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ehugo生成静态网页文件\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehugo\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e在 \u003ccode\u003epublic\u003c/code\u003e中就是生成好的静态网页文件，可以用浏览器打开\u003c/p\u003e\n\u003cp\u003e把public重命名未我的博客 \u003ccode\u003ech38r18.github.io\u003c/code\u003e 和github上的仓库名称一致\u003c/p\u003e\n\u003cp\u003e在上面文件夹中，git bash打开，执行一下代码\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egit init  //初始化git\ngit add .\ngit commit -m \u0026quot;第一次上传\u0026quot;  //提交更新，备注信息\ngit push -u origin master\n//验证用户\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e让后到我的\u003ccode\u003ehttps://ch38r18.github.io/\u003c/code\u003e 中查看效果\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e第四个问题更新hugo\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e当文件夹结构更换以后\u003c/p\u003e\n\u003cp\u003e生成静态网页 \u003ccode\u003epublic\u003c/code\u003e 文件夹\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehugo --baseUrl=\u0026quot;https://ch38r18.github.io/\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e将\u003ccode\u003ephotos\u003c/code\u003e 移动到 \u003ccode\u003emy photos\u003c/code\u003e 中，否则相册无法正常显示\u003c/p\u003e\n\u003cp\u003e删除远程仓库博客数据v01\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egit pull git@github.com:ch38r18/ch38r18.github.io.git //将仓库与本地同步\ngit rm * -r //-r 当给出主目录名时允许递归删除，删除本地仓库中所有文件\ngit add .\ngit commit -m \u0026quot;删除博客数据v02\u0026quot;  //提交本次删除数据\ngit push\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e替换上传博客数据v02\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e//把生成的 public 新数据复制到目录中 执行下面参数，上传\ngit add .\ngit commit -m \u0026quot;2021.01.29-上传博客数据v02\u0026quot;  //提交本次上传数据\ngit push -u origin master --force  //--force强制覆盖参数\n//用户验证 帐号 密码\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e等待12分钟，刷新 \u003ccode\u003ehttps://ch38r18.github.io/\u003c/code\u003e才看到效果\u003c/p\u003e\n","permalink":"/hugo/20210129b%E5%BC%80%E5%A7%8Bhugo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E6%97%85/","title":"20210129b开始hugo博客之旅"},{"htmlString":"\n\u003ch2 id=\"git同步本地与github\"\u003e\u003ca href=\"#git%e5%90%8c%e6%ad%a5%e6%9c%ac%e5%9c%b0%e4%b8%8egithub\"\u003egit同步本地与github\u003c/a\u003e\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ecd 到目录\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ecd public #hugo静态博客生成的目录\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecd public\r\ngit init\r\ngit remote add origin https://github.com/ch38r18/ch38r18.github.io.git\r\ngit add -A\r\ngit commit -m \u0026quot;first commit\u0026quot;\r\ngit push -u origin master\r\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egit add #添加文件\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egit commit -m \u0026lsquo;first commit\u0026rsquo;   \u003ccode\u003e告诉Git，把文件提交到仓库。引号内为提交说明 \u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egit remote add origin 你的远程库地址\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egit pull \u0026ndash;rebase origin master \u003ccode\u003e获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egit push -u origin master  \u003ccode\u003e把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egit status \u003ccode\u003e状态查询命令\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003egit pull --rebase origin master\r\n\r\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/git/20210129a%E6%9C%AC%E5%9C%B0%E4%B8%8Egithub%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5/","title":"20210129a本地与github仓库同步"},{"htmlString":"","permalink":"/git/","title":"💾 git"},{"htmlString":"\n\u003ch2 id=\"关于github\"\u003e\u003ca href=\"#%e5%85%b3%e4%ba%8egithub\"\u003e关于github\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e本blog是静态博客，用hugo管理md文件生成html\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用hugo生成静态bolg，因为文章数量多了以后，生成速度快。\u003c/li\u003e\n\u003cli\u003e主题使用 简单的文件夹 模式 \u003ccode\u003ehttps://github.com/pys1992/hugo-theme-simple-blog\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e使用github免费服务，本网址 \u003ccode\u003ehttps://ch38r18.github.io/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e简洁无评论插件，\u003ca href=\"http://ch38r18.ys168.com/\"\u003e到ys168给我留言\u003c/a\u003e ，小白之间才能更好的砥砺前行！\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003e2021-01-29 29/365 于重庆\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2 id=\"关于我\"\u003e\u003ca href=\"#%e5%85%b3%e4%ba%8e%e6%88%91\"\u003e关于我\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003e不好总结，难以捉摸！\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e以下，可证：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2021Top\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ex. 不为金钱而活，只为生存而活。\u003c/p\u003e\n\u003cp\u003ex. 天天向上，砥砺前行，生生不息，循序渐进！\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2020喜欢Top\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e网络小说：剑来\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e2019喜欢Top\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e斗鱼直播：彡彡九户外\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cstrong\u003e以上\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eend\u003c/p\u003e\n","permalink":"/about-me/","title":"about me"},{"htmlString":"\n\u003ch3 id=\"如何制作主题\"\u003e\u003ca href=\"#%e5%a6%82%e4%bd%95%e5%88%b6%e4%bd%9c%e4%b8%bb%e9%a2%98\"\u003e如何制作主题\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e入门文章 \u003ccode\u003ehttps://hanmei.live/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AAhugo%E4%B8%BB%E9%A2%98/\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e2017.Hugo的theme使用与定制 \u003ccode\u003ehttps://note.qidong.name/2017/06/22/hugo-theme/\u003c/code\u003e\u003c/p\u003e\n\n\u003ch3 id=\"还是简单的文件夹模板好用\"\u003e\u003ca href=\"#%e8%bf%98%e6%98%af%e7%ae%80%e5%8d%95%e7%9a%84%e6%96%87%e4%bb%b6%e5%a4%b9%e6%a8%a1%e6%9d%bf%e5%a5%bd%e7%94%a8\"\u003e还是简单的文件夹模板好用\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e这个\u003cstrong\u003esimple-blog\u003c/strong\u003e好用 \u003ccode\u003ehttps://github.com/pys1992/hugo-theme-simple-blog\u003c/code\u003e\u003c/p\u003e\n","permalink":"/hugo/20210127a%E4%B8%BB%E9%A2%98%E9%80%89%E6%8B%A9/","title":"20210127a主题选择"},{"htmlString":"\n\u003ch3 id=\"hexo刚入门就开始hugo\"\u003e\u003ca href=\"#hexo%e5%88%9a%e5%85%a5%e9%97%a8%e5%b0%b1%e5%bc%80%e5%a7%8bhugo\"\u003ehexo刚入门就开始hugo\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e开始hugo\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e安卓8 arm64\u003c/li\u003e\n\u003cli\u003etermux 0.105 \u003ccode\u003ehttps://f-droid.org/repo/com.termux_105.apk\u003c/code\u003e 这个版本已经包含了很多必须的包\u003c/li\u003e\n\u003cli\u003ego 1.15.6\u003c/li\u003e\n\u003cli\u003ehugo 0.80.0\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003epkg i golang\npkg hugo\nhugo new site blog\ncd blog\n# 下载一个中文主题\ngit clone https://github.com/flysnow-org/maupassant-hugo themes/maupassant\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e文件夹管理器中修改：\u003c/li\u003e\n\u003cli\u003e在主题的 \u003ccode\u003eexampleSite\u003c/code\u003e 示例目录下有\u003ccode\u003econfig.toml\u003c/code\u003e 文件，\u003c/li\u003e\n\u003cli\u003e把 \u003ccode\u003econfig.toml\u003c/code\u003e 文件复制到你的站点目录下\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003ehugo #生成静态文件\nhugo s #开启网络服务\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"主题\"\u003e\u003ca href=\"#%e4%b8%bb%e9%a2%98\"\u003e主题\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e第一个\n\u003ccode\u003egit clone https://github.com/nishanths/cocoa-hugo-theme.git themes/cocoa\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e第二个 \u003ccode\u003egit clone https://github.com/mtn/cocoa-eh-hugo-theme.git themes/cocoa-eh\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e主题什么的都很好，但是我驾驭不了啊。来一个新鲜出炉的。查找最新编辑的，直接用。文件夹模式 \u003ccode\u003e   \u003c/code\u003e\u003c/p\u003e\n\n\u003ch3 id=\"关于局域网访问-2021-01-29\"\u003e\u003ca href=\"#%e5%85%b3%e4%ba%8e%e5%b1%80%e5%9f%9f%e7%bd%91%e8%ae%bf%e9%97%ae-2021-01-29\"\u003e关于局域网访问 2021-01-29\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e局域网是不能直接用hugo server实现的\u003c/p\u003e\n\u003cp\u003e通过命令 \u003ccode\u003ehugo server -b \u0026quot;http://192.168.199.216\u0026quot; --bind \u0026quot;192.168.199.216\u0026quot; \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e还可以指定端口 \u003ccode\u003ehugo server -b \u0026quot;http://192.168.199.216\u0026quot; -p 8080 --bind \u0026quot;192.168.199.216\u0026quot; \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e最后，我在手机上 测试https，电脑上还是只能用http打开。\u003c/p\u003e\n","permalink":"/hugo/20210125a%E5%85%A5%E9%97%A8hugo/","title":"20210125a入门hugo"},{"htmlString":"\u003cp\u003evia unangela.com\u003c/p\u003e\n\n\u003ch3 id=\"hexo默认主题landscape优化\"\u003e\u003ca href=\"#hexo%e9%bb%98%e8%ae%a4%e4%b8%bb%e9%a2%98landscape%e4%bc%98%e5%8c%96\"\u003eHexo默认主题landscape优化\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003elandscape 作为 Hexo 默认主题还是非常简洁大方的，该有的都有\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e图片路径：…\\themes\\landscape\\source\\css\\images\\banner.jpg\n分辨率尽量一致：1900*1200，大小不宜过大，否则影响加载，尽量500kb以内。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e字体\u0026amp;配色\u0026amp;布局\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e基础样式：\u003ccode\u003e…\\themes\\landscape\\source\\css_variables.styl\u003c/code\u003e\n// Colors\n// Fonts\u003c/p\u003e\n\u003cp\u003e详细文件：\u003ccode\u003e…\\themes\\landscape\\source\\css_partial*.styl\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e页面布局：\u003ccode\u003e…\\themes\\landscape\\layout*.ejs\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e添加文章评论\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e注册 Disqus，获得 shortname\u003c/li\u003e\n\u003cli\u003e打开 \u003ccode\u003e…\\themes\\landscape\\layout_partial\\article.ejs\u003c/code\u003e ，在文件最后添加下面的代码：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e    \u0026lt;% if (!index \u0026amp;\u0026amp; post.comments){ %\u0026gt;\n    \u0026lt;section id=\u0026quot;comments\u0026quot;\u0026gt;\n      \u0026lt;div id=\u0026quot;disqus_thread\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\n      \u0026lt;script\u0026gt;\n    \t(function() { \n    \tvar d = document, s = d.createElement('script');\n    \t//下面 shortname 修改为对应的 shortname\n    \ts.src = 'https://shortname.disqus.com/embed.js';\n    \ts.setAttribute('data-timestamp', +new Date());\n    \t(d.head || d.body).appendChild(s);\n    \t})();\n      \u0026lt;/script\u0026gt;\n      \u0026lt;noscript\u0026gt;Please enable JavaScript to view the \u0026lt;a href=\u0026quot;https://disqus.com/?ref_noscript\u0026quot;\u0026gt;comments powered by Disqus.\u0026lt;/a\u0026gt;\u0026lt;/noscript\u0026gt;\n    \u0026lt;/section\u0026gt;\n    \u0026lt;% } %\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/hexo/20210125c/","title":"c默认主题优化"},{"htmlString":"","permalink":"/tags/hexo/","title":"hexo"},{"htmlString":"","permalink":"/tags/","title":"Tags"},{"htmlString":"","permalink":"/hexo/","title":"💾 hexo"},{"htmlString":"\u003cp\u003e1.26\u003c/p\u003e\n\u003cp\u003e关于hexo源码，解析：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://juejin.cn/post/6844903469669679117\"\u003e源码解析1\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://blog.eson.org/pub/70d0eddc/\"\u003e源码分析2\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e这个网站有问题还是via阅读理解学习一下 \u003ca href=\"https://unangela.com/2018/05/08/landscape%E7%9A%84%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/\"\u003e默认主题优化\u003c/a\u003e\u003c/p\u003e\n","permalink":"/hexo/20210125b/","title":"hexo相关数据"},{"htmlString":"","permalink":"/tags/%E6%BA%90%E7%A0%81/","title":"源码"},{"htmlString":"\n\u003ch3 id=\"hexo定义\"\u003e\u003ca href=\"#hexo%e5%ae%9a%e4%b9%89\"\u003ehexo定义\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e是一个JS语言编写的静态网站生成器，\u003c/li\u003e\n\u003cli\u003e主要作用是解析Markdown语法，并配合模板引擎，快速生成静态网站。\u003c/li\u003e\n\u003cli\u003e同时，还可以自定义主题，引用第三方插件，\u003c/li\u003e\n\u003cli\u003e除了搭建个人博客之外，Hexo还被许许多多的项目拿来生成API文档\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"框架特色\"\u003e\u003ca href=\"#%e6%a1%86%e6%9e%b6%e7%89%b9%e8%89%b2\"\u003e框架特色\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003eNode.js运行环境，速度极快，扩展能力强，强大的插件系统，可配置性高，一键编译部署，\u003c/li\u003e\n\u003cli\u003e适用于博客，静态个人网站，开源项目文档，\u003c/li\u003e\n\u003cli\u003e最受欢迎的JS静态网站生成器。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"hexo命令行设计\"\u003e\u003ca href=\"#hexo%e5%91%bd%e4%bb%a4%e8%a1%8c%e8%ae%be%e8%ae%a1\"\u003eHexo命令行设计\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e在命令行模块，Hexo选择使用minimist来解析命令行参数得到一个js对象，\u003c/li\u003e\n\u003cli\u003e并建立一个Hexo实例并初始化，\u003c/li\u003e\n\u003cli\u003e最后通过实例对象call方法传递命令行指令。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003evar args = minimist(process.argv.slice(2))\nvar cmd = args._.shift()\nvar hexo = new Hexo()\nhexo.init()\nhexo.call(cmd, args)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"hexo入口模块设计\"\u003e\u003ca href=\"#hexo%e5%85%a5%e5%8f%a3%e6%a8%a1%e5%9d%97%e8%ae%be%e8%ae%a1\"\u003eHexo入口模块设计\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e同大多数框架相同，Hexo采用构造-原型组合模式定义类，采用组合继承的方式继承Node中EventEmitter模块，更容易得通过on与emit发布与订阅事件。\u003c/li\u003e\n\u003cli\u003e在实例化阶段，保存所编译文件存放的路径、输出路径及其它脚本、插件、主题等所处的路径，保存环境变量，即命令行参数、版本号等基本信息。\u003c/li\u003e\n\u003cli\u003e创建扩展对象，按不同的功能进行分类，作用是创建store，用于注册句柄，获取句柄，以便后续编译过程调用，\u003c/li\u003e\n\u003cli\u003e在Hexo中，扩展类型包括\u003c/li\u003e\n\u003cli\u003e控制台(Console)、\u003c/li\u003e\n\u003cli\u003e部署器(Deployer)、\u003c/li\u003e\n\u003cli\u003e过滤器(Filter)、\u003c/li\u003e\n\u003cli\u003e生成器(Generator)、\u003c/li\u003e\n\u003cli\u003e辅助函数(Helper)、\u003c/li\u003e\n\u003cli\u003e处理器(Processor）、\u003c/li\u003e\n\u003cli\u003e渲染引擎(Renderer)等等。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003efunction Hexo(base, args) {\n  EventEmitter.call(this)\n  this.public_dir = path.join(base, 'public');\n  this.source_dir = path.join(base, 'source');\n  ...\n  this.extend = {\n    console: new extend.Console(),\n    generator: new extend.Generator(),\n    processor: new extend.Processor(),\n    renderer: new extend.Renderer(),\n    ...\n  }\n  ...\n}\n// 等同于Object.setPrototypeOf(Hexo.prototype, EventEmitter.prototype)\nrequire('util').inherits(Hexo, EventEmitter)\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e换句话说，扩展对象是一个容器，一个事件注册机，\u003c/li\u003e\n\u003cli\u003e接下来要做的是在Hexo初始化阶段，加载Hexo内置插件，不断扩充容器的功能，\u003c/li\u003e\n\u003cli\u003e以渲染引擎为例，向extend.renderer注册渲染过程处理函数，在其它模块中就可以很方便得从hexo的上下文中去调用渲染引擎。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003eHexo.prototype.init = function() {\n  \n  require('plugins/console')(this);\n  require('plugins/generator')(this);\n  require('plugins/processor')(this);\n  require('plugins/renderer')(this);\n  ...\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003emodule.exports = function(hexo) {\n  var renderer = hexo.extend.renderer;\n  renderer.register('swig', 'html', require('./swig'));\n  renderer.register('ejs', 'html', require('./ejs'));\n  renderer.register('yml', 'json', require('./yaml'));\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003emodule.exports = function(hexo) {\n  var renderer = hexo.extend.renderer;\n  return renderer.get('ejs');\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e除了加载内部插件外，Hexo还允许加载第三方插件，用npm的方式安装依赖包或者存放在目录scripts文件夹中，\u003c/li\u003e\n\u003cli\u003e巧妙的是，插件内部无需引用hexo对象，可直接使用hexo变量来访问执行上下文，\u003c/li\u003e\n\u003cli\u003e正是由于框架采用的是Node中vm(Virtual Machine)模块来加载js文件，相当于模板引擎实现原理中的new Function或eval来解析并执行字符串代码。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003eHexo.prototype.loadPlugin = function(path) {\n  fs.readFile(path).then(function(script) {\n    script = '(function(hexo){' +\n      script + '});';\n\n    return vm.runInThisContext(script, path)(this);\n  });\n};\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"hexo编译模块设计\"\u003e\u003ca href=\"#hexo%e7%bc%96%e8%af%91%e6%a8%a1%e5%9d%97%e8%ae%be%e8%ae%a1\"\u003eHexo编译模块设计\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e预期用户命令行接口\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e$ hexo generate复制代码\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e首先往Hexo扩展对象Console中注册generate函数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003econsole.register('generate', 'Generate static files.', {\n  options: [\n    {name: '-d, --deploy', desc: 'Deploy after generated'},\n    {name: '-f, --force', desc: 'Force regenerate'},\n    {name: '-w, --watch', desc: 'Watch file changes'}\n  ]\n}, require('./generate'));\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003egenerate函数用于生成目标文件夹，\u003c/li\u003e\n\u003cli\u003e从Hexo的路由模块中取得所有需要生成目标文件的路径，调用fs输出文件，\u003c/li\u003e\n\u003cli\u003e在此之前，首先得对源文件进行预处理，把路径写入路由。\u003c/li\u003e\n\u003cli\u003e由于Hexo本身设计的特点，源文件又分为内容和主题两部分，\u003c/li\u003e\n\u003cli\u003e分别存放在source和theme文件夹中，所以得调用process函数分别对它们进行预处理。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003efunction generate(hexo) {\n  hexo.source.process();\n  hexo.theme.process();\n  routerList.forEach(path =\u0026gt; writeFile(path))\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eHexo抽象出一层公用模块用来管理所有处理器，命名为Box，相当于一个容器，统一管理处理器的添加删除执行监控，并分别为source和theme创建实例，Box原型如下\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003efunction Box(base) {\n  this.base = base;\n  this.processors = [];\n}\n\nBox.prototype.addProcessor = function(pattern, fn) {\n  this.processors.push({\n    pattern: pattern,\n    process: fn\n  });\n};\n\nBox.prototype.process = function(callback) {\n  this.processors.forEach(processor =\u0026gt; processor.process())\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e有了Box容器，接下来要做的就是往容器中添加处理器，同样，用插件的形式往扩展对象extend中注册句柄，再注入到Box容器中。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003emodule.exports = function(hexo) {\n  var processor = hexo.extend.processor;\n  var obj = require('./asset')(hexo);\n  processor.register(obj.pattern, obj.process); \n  ...\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e以markdwon文件的处理为例，成功匹配到文件扩展名后，调用hexo-front-matter利用正则表达式匹配来解析文件，分离顶部元数据与主题内容，类似于gray-matter，把元数据与内容以key/value的形式转换为一个js对象。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003emodule.exports = function(hexo) {\n  return {\n    pattern: /\\.md/,\n    process: function(path) {\n      readFile(path, function(err, content) {\n        var data = require('hexo-front-matter')(content)\n        data.source = path;\n        data.raw = content;\n        return data\n      }\n    }  \n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e// markdown文件\n---\ntitle: hello\nlayout: home\n---\n\nA fast, simple \u0026amp; powerful blog framework\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e解析成 =\u0026gt;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\n  title: 'hello',\n  layout: 'home',\n  _content: '# Hexo\\nA fast, simple \u0026amp; powerful blog framework',\n  source: 'README.md',\n  raw: '---\\ntitle: hello\\n---\\n# Hexo\\nA fast, simple \u0026amp; powerful blog framework' \n}\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e下一步，Hexo定义了过滤器(Filter)的概念，借鉴于Wordpress，用于在模板渲染前后修改具体的数据，也可把它看成一个钩子，例如使用marked编译markdown文件内容。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003ehexo.execFilter('before_generate', function(data) {\n    hexo.render.render({\n      text: data._content,\n      path: data.source,\n      engine: data.engine\n    });\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e转换后增加一条content属性，带有标签与类名的markdown html片段。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003e{\n  title: 'hello',\n  layout: 'home',\n  _content: '# Hexo\\nA fast, simple \u0026amp; powerful blog framework',\n  content: '\u0026lt;h1 id=\u0026quot;Hexo\u0026quot;\u0026gt;\u0026lt;a href=\u0026quot;#Hexo\u0026quot; class=\u0026quot;headerlink\u0026quot;     title=\u0026quot;Hexo\u0026quot;\u0026gt;\u0026lt;/a\u0026gt;Hexo\u0026lt;/h1\u0026gt;\u0026lt;p\u0026gt;A fast, simple \u0026amp; powerful blog   framework\u0026lt;/p\u0026gt;\\n',\n  source: 'README.md',\n  raw: '---\\ntitle: hello\\n---\\n# Hexo\\nA fast, simple \u0026amp; powerful blog framework' \n}\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e得到页面数据后，进入模板引擎渲染阶段，Hexo本身并不带模板引擎的实现，需要借助第三方库，如ejs，并通过一个适配器，把原接口转换为需求接口，向扩展对象extend.render中注册模板解析函数。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003ehexo.extend.renderer.register('ejs', 'html', function(data, locals) {\n  require('ejs').render(data, locals))\n});\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e模板引擎解析后的函数存储在hexo.theme对象中，以文件名作为key，后续渲染时只需匹配layout就能找到指定的渲染函数，注入locals变量(上面markdwon解析后的js对象+扩展对象extend.helper定义的变量、函数)，生成最终文本字符串。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003evar view = hexo.theme.getView(data.layout);\nview.render(locals)\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e最后通过Nodefs模块把最终文本字符串输出到public目标文件夹中，大功告成。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e回顾整个工作流程，可以看作\ncli =\u0026gt; hexo init =\u0026gt; plugin load =\u0026gt; process =\u0026gt; filter =\u0026gt; render =\u0026gt; generate\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"扩展阅读\"\u003e\u003ca href=\"#%e6%89%a9%e5%b1%95%e9%98%85%e8%af%bb\"\u003e扩展阅读\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e此外，Hexo还有许多优秀的设计模式\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e数据库系统\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eHexo引入了json数据库warehouse，也是作者自己开发的一个数据库驱动，API用法与Mongoose相差无几，在架构中的角色是充当一个中介者，存储临时数据，或者持久化数据存储，如博客的发表时间等，还可以作为缓存层，比对文件的修改时间，跳过无修改文件的编译过程，减少二次编译的时间。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e异步方案\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e大量的异步回调文件操作会让代码丧失可读性，Hexo引入Promise库bluebird，内置丰富的API，很方便的处理异步的流程控制，如使用Promise.promisify(require(\u0026lsquo;fs\u0026rsquo;).readFile)可以把原生fs异步函数包装成一个Promise对象，另外，随着Node7.6的正式版发布，直接支持async/await语法，可以更优雅得处理异步问题。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e通用日志模块\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e把Log划分为六个级别，\u0026lsquo;TRACE\u0026rsquo;, \u0026lsquo;DEBUG\u0026rsquo;, \u0026lsquo;INFO \u0026lsquo;, \u0026lsquo;WARN \u0026lsquo;,\u0026lsquo;ERROR\u0026rsquo;,\u0026lsquo;FATAL\u0026rsquo;，不同级别输出不同的格式与颜色(chalk)，并提供命令行接口，如果带有\u0026ndash;debug字段，则Log自动降级为\u0026rsquo;TRACE\u0026rsquo;级别。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEnd.\u003c/strong\u003e\u003c/p\u003e\n","permalink":"/hexo/20210125a%E8%AF%BB%E6%87%82hexo%E6%BA%90%E7%A0%81/","title":"读懂 Hexo 源码设计模式"},{"htmlString":"\n\u003ch3 id=\"2020网络信息灭绝评论\"\u003e\u003ca href=\"#2020%e7%bd%91%e7%bb%9c%e4%bf%a1%e6%81%af%e7%81%ad%e7%bb%9d%e8%af%84%e8%ae%ba\"\u003e2020网络信息灭绝评论\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e每时每刻吧，像 WX，WB 这种封闭生态，没被删留下来的都是被“喜欢”的。如果哪天不喜欢哪个，服务器一敲键盘，内容就在整个生态里从此消失，就像从来没发生过一样。谁掌握了过去，谁就掌握了未来；谁掌握了现在，谁就掌握了过去。\u003c/li\u003e\n\u003cli\u003e2021 年，脸书推特 instagram 等社交平台全面封杀川普及其支持者，亚马逊强行停服 parler 。世界终于趋于大同。\u003c/li\u003e\n\u003cli\u003e你这些都不是事，p 站还我收藏的视频！\u003c/li\u003e\n\u003cli\u003eTypeError：2020初墙内微博微信大肆封删 COVID19 相关的信息，有兴趣可以去了解下 GitHub 很多人做过的备份  在线服务都不可靠，就像做分布式的默认单个节点机器不可靠一样，所以本地+多处备份最好。\u003c/li\u003e\n\u003cli\u003e看来去中心化的平台，很有必要了\u003c/li\u003e\n\u003cli\u003e中文互联网社区的内容基本上都报销了\u003c/li\u003e\n\u003cli\u003e2021 年，虾米音乐通知关闭\u003c/li\u003e\n\u003cli\u003e再过两年中文内容可能就全在一个个 APP 里了，浏览器 Web 可以消亡了。\u003c/li\u003e\n\u003cli\u003ep**nhub 删除非认证视频是大事件\u003c/li\u003e\n\u003cli\u003eAppStore 下架所有没有版号的游戏，蝈区彻底成了鬼区\u003c/li\u003e\n\u003cli\u003e多说”前几年也没了，那会应该是用的最多的评论框。\u003c/li\u003e\n\u003cli\u003e估计这个世界还剩北欧一个政治净土\u003c/li\u003e\n\u003cli\u003exiunobbs 关站。酷 Q 等多家 QQ 机器人软件 大部分停止运营\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"js功能评论区\"\u003e\u003ca href=\"#js%e5%8a%9f%e8%83%bd%e8%af%84%e8%ae%ba%e5%8c%ba\"\u003ejs功能评论区\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e主要是原生 js （严格来说是浏览器 DOM 的 api 标准）把 jquery 的优点都抄过去了，可以理解为现在 js 本身已经自带了一个简单版的 jquery 。\u003c/li\u003e\n\u003cli\u003e我有个需求：某网站(我管不着的)是用 react 写的，ajax 或 fetch 过来数据之后渲染的页面，现在我针对这个网站写个浏览器扩展，添加一些元素，监听一些事件，ajax 获取一些数据, 我觉得我用 jQuery 挺合适的。有大佬有办法用 react vue 之类的实现我这个需求吗？\u003c/li\u003e\n\u003cli\u003e对后端来说，最不能接受的是：javascript 是一种需要编译的语言\u003c/li\u003e\n\u003cli\u003eJQ 时代结束了。但是目前依然有无数依赖 JQ 开发的网站\u003c/li\u003e\n\u003cli\u003e初次看到 Livewire 的时候，亮瞎了我一眼，果然是给全干工程师的好东西。\u003c/li\u003e\n\u003cli\u003ejq 已经完成了历史使命 它的很多部分已经成了 es 的标准\u003c/li\u003e\n\u003cli\u003e百度首页不也在用 jq，据说版本还很老\u003c/li\u003e\n\u003cli\u003e因为 js 现在已经吸收了很多 jq 的长处了吧，ES6 开始原生已经很强了， 但是不得不说很多人在当年没有学过 js 的情况下都是直接上手 jq 就能学着用的（比如我），很多老的网站还是 jq 维护着，只是新的项目选型基本不太会选他了\u003c/li\u003e\n\u003cli\u003e已经不用了。ARV 三大框架，数据驱动，组件化开发，再也不用在业务逻辑里面写一堆选择器了，节省代码量，开发更轻松。jquery 的一部分 api 都可以用原生的 javascript 来代替了。兼容性也有 babel 来解决了。你要是觉得你的代码上能跑通 chrome87，下能兼容 ie7，无所谓了，随你开心。webpack 编译、打包、压缩、上传 cdn，一个命令，一条龙服务。\u003c/li\u003e\n\u003cli\u003evar 都亡了, 现在都是 const 和 let 了\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"其他\"\u003e\u003ca href=\"#%e5%85%b6%e4%bb%96\"\u003e其他\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e如何提高 NOTION 在国内的访问速度\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e最好是通过 CLASH 来分流规则实现加速！\u003c/li\u003e\n\u003cli\u003eChrome 控制台看一下请求了哪些域名，加到 Clash 规则里。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e免费就是最贵的\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e只能通过广告等手段才能让输入法盈利，\u003c/li\u003e\n\u003cli\u003e从另一方面来说，免费的就是最贵的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e其他\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFPGA  纳米材料 工艺发展\u003c/li\u003e\n\u003cli\u003e事实以规定为准，天子和周礼的权威高于牛顿定律和弹道曲线。\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/via/20210124b%E6%96%87%E6%91%98/","title":"1.14阅读文摘"},{"htmlString":"","permalink":"/tags/%E6%96%87%E6%91%98/","title":"文摘"},{"htmlString":"\n\u003ch3 id=\"2019年互联网信息大灭绝事件\"\u003e\u003ca href=\"#2019%e5%b9%b4%e4%ba%92%e8%81%94%e7%bd%91%e4%bf%a1%e6%81%af%e5%a4%a7%e7%81%ad%e7%bb%9d%e4%ba%8b%e4%bb%b6\"\u003e2019年互联网信息大灭绝事件\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e2019 年 5 月份，百度贴吧删除大量 2017 年以前的帖子，很多动漫和老游戏贴吧的资源贴全军覆没\u003c/li\u003e\n\u003cli\u003e2019 年 9 月 28 日，爱拍视频网站突然关闭，从 27 号夜间通知到到 28 号立刻关站，甚至都没给用户多留几个小时的备份时间\u003c/li\u003e\n\u003cli\u003e2019 年 12 月 31 日多玩论坛宣布关闭\u003c/li\u003e\n\u003cli\u003e2019 年，网易博客彻底关闭\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"个人点评\"\u003e\u003ca href=\"#%e4%b8%aa%e4%ba%ba%e7%82%b9%e8%af%84\"\u003e个人点评\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e突然觉得网络没有那么美好了，\u003c/li\u003e\n\u003cli\u003e以前以为网络没有岁月感，现在才知道，网络的岁月感，最强烈！\u003c/li\u003e\n\u003cli\u003e从此，网络云端都是浮云，自己的东西，自己保存。\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/via/20210124a2019%E4%BF%A1%E6%81%AF%E7%81%AD%E7%BB%9D/","title":"2019年互联网信息大灭绝事件"},{"htmlString":"","permalink":"/tags/%E4%BF%A1%E6%81%AF/","title":"信息"},{"htmlString":"","permalink":"/tags/%E5%B9%B4%E5%BA%A6/","title":"年度"},{"htmlString":"","permalink":"/tags/%E7%81%AD%E7%BB%9D/","title":"灭绝"},{"htmlString":"","permalink":"/tags/%E6%91%98%E5%BD%95/","title":"摘录"},{"htmlString":"\n\u003ch3 id=\"md聚合阅读\"\u003e\u003ca href=\"#md%e8%81%9a%e5%90%88%e9%98%85%e8%af%bb\"\u003emd聚合阅读\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e激流网\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e“我们学新闻也好，学法律也好，都救不了自己。”庹继光的遗言\u003c/li\u003e\n\u003cli\u003e尸骸若不被埋在活人心中，那便真成了尸骸。对于庹继光教授的死，怎能不让人联想到上一个溺水自杀的成都大学的党委书记毛洪涛呢！怎能不让人联想到，为讨回自己的血汗钱，不惜用汽油浇身，点燃自己的蜂鸟配送员呢！又怎能不让人回想起无数个只能失落地结束自己生命，以控诉自己无处可走的遭遇，想要唤醒麻木他人的自杀者呢！有人说，“选择自杀是懦夫，不是明智的行为。”我们终究很难体会到或理解庹继光为何会选择这条绝路，但我们可以猜测，庹继光作为一名高级知识分子，四川师范大学文学院教授，他看清了如铁壁般的事实，选择了以死相拼，从高高的楼上一跃而下。\u003c/li\u003e\n\u003cli\u003e从旧社会过来的老工人，都有一部血泪斑斑的家史。回想旧社会，工人“吃的猪狗食，干的牛马活”，“做工做到老，不及一根草”，政治上受压迫，生活上无保障，日子越过越苦。\u003c/li\u003e\n\u003cli\u003e舆论工具从不掌握在发出批判意见的人群手中。\u003c/li\u003e\n\u003cli\u003e定义，不仅需要申明自己是什么，还需要声明自己不是什么，这才构成一个完整的定义。\u003c/li\u003e\n\u003cli\u003e“没有任何绝对的价值，因为对货币来说，价值本身是相对的。没有任何东西是不可让渡的，因为一切东西都可以为换取货币而让渡。没有任何东西是高尚的、神圣的等等，因为一切东西都可以通过货币而占有。正如在上帝面前人人平等一样，在货币面前也不存在‘不能估价、不能抵押或转让的’，‘处于人类商业之外的’，‘谁也不能占有的’，‘神圣的’和‘宗教的东西’。”（马克思恩格斯全集：第46卷下[M].北京：人民出版社，1980：368）\u003c/li\u003e\n\u003cli\u003e雄关漫道真如铁，而今迈步从头越。\u003c/li\u003e\n\u003cli\u003e初听不识曲中意，再闻已是乐中人。\u003c/li\u003e\n\u003cli\u003e“无产阶级要按照自己的世界观改造世界，资产阶级也要按照自己的世界观改造世界。”（《关于正确处理人民内部矛盾的问题》人民出版社27页，引自《毛主席语录》，1967年版，16页。）\u003c/li\u003e\n\u003cli\u003e996顾名思义，指的是早上9点上班，晚上9点下班，一周工作6天；什么是11-11-6呢？显而易见，这就是指，早上11点上班，晚上11点下班，一周工作6天。\u003c/li\u003e\n\u003cli\u003e拜物教本来是指人们迷信某种物具有神秘的力量，而加以崇拜的一种宗教。在社会生产力水平很低时，由于人们控制自然的能力很薄弱，在自然力面前软弱无能，因此把自然力神秘化起来，以为象雷、电、水、火这样的自然界力量，有什么神灵在那里主宰着，因而拜倒在它们脚下。在以私有制为基础的商品经济中，也存在着类似的情况。商品本来是人们自己双手创造出来的东西，但它却被看成为凌驾于人们之上的，具有支配人们命运的力量。这种现象，马克思把它叫做商品拜物教。\u003c/li\u003e\n\u003cli\u003e商品货币关系并不是永恒的东西，而是一种历史现象。从而，以商品作为细胞的资本主义经济制度，也决不是永恒的。在一定历史条件下产生的东西，必将随着历史条件的变化而消灭，这是不以人们的意志为转移的客观规律。同理可证\u003c/li\u003e\n\u003cli\u003e维系或者摧毁一段婚姻，金钱都扮演着重要的角色。除了爱和浪漫，婚姻里还充满了各种经济考量。\u003c/li\u003e\n\u003cli\u003e英国有一位左派作家乔治·奥威尔。他有一本名著《动物农场》，在国内算是人尽皆知。书中象征着马克思的白猪死后，动物们继承他的遗志，在墙上写上这样一句标语：“每一只动物都是平等的。” 可是后来，篡改经典的黑猪掌权。它既要承认平等的价值观，又想标明自己高人一等，于是把这句标语改成了：“每一只动物都是平等的，但是有些动物更平等。”\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eve2x\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ewin10+深蓝词库 极度舒适\u003c/li\u003e\n\u003cli\u003e请拒绝一切大厂国产软件，能不用就不用，他们有的是办法恶心你\u003c/li\u003e\n\u003cli\u003e…\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e**\u003c/p\u003e\n","permalink":"/via/20210123a%E9%98%85%E8%AF%BB%E6%96%87%E6%91%98/","title":"文摘"},{"htmlString":"","permalink":"/tags/%E9%98%85%E8%AF%BB/","title":"阅读"},{"htmlString":"\n\u003ch3 id=\"2021-年这-8-种编程语言最流行go-入榜原来是这个原因\"\u003e\u003ca href=\"#2021-%e5%b9%b4%e8%bf%99-8-%e7%a7%8d%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80%e6%9c%80%e6%b5%81%e8%a1%8cgo-%e5%85%a5%e6%a6%9c%e5%8e%9f%e6%9d%a5%e6%98%af%e8%bf%99%e4%b8%aa%e5%8e%9f%e5%9b%a0\"\u003e2021 年这 8 种编程语言最流行：Go 入榜原来是这个原因\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e怎样判断哪种编程语言最流行？正如要挑选最受欢迎的冰激凌一样，每个人都有自己的最爱。实际上，由于各种原因，不同的开发人员喜欢不同的编程语言，当你认为一种编程语言可能占主导地位时，一种新的编程语言出现了，或者一种老的语言与新的应用联系起来了。\u003c/p\u003e\n\u003cp\u003e2021 年最流行的编程语言将基于相关开发人员想要完成的任务以及他们已经学习或完成的工作。对希望获得加薪[1]的有经验的程序员来说，最流行的编程语言将不同于那些刚开始工作的程序员，这些人在参加了编程训练营后想要从事初级编程工作[2]。\u003c/p\u003e\n\u003cp\u003e有这么多不断变化的语言，很难知道该从何处入手，尤其是开源语言一直在变化，新的包和框架不断涌现。无论你的兴趣或需求是什么，如果你想了解 2021 年最流行的编程语言，你可以从本文这个列表中找到它们。\u003c/p\u003e\n\n\u003ch3 id=\"01-最流行的初学者编程语言python\"\u003e\u003ca href=\"#01-%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e5%88%9d%e5%ad%a6%e8%80%85%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80python\"\u003e01 最流行的初学者编程语言：Python\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e无论你查看什么榜单，Python 几乎都被列为最受初学者欢迎的编程语言：在 Qvault 关于初学者最佳编程语言[3]的帖子，GitHub 的排名[4]，Stack Overflow 的开发者调查[5]，甚至是大学教授计算机科学专业的最热门语言[6]，都是如此。\u003c/p\u003e\n\u003cp\u003e来源：https://pypl.github.io/PYPL.html\u003c/p\u003e\n\u003cp\u003e它不像 Rust 那样快速发展，也不像 JavaScript 那样老掉牙。但它是一种不可阻挡的编程语言。它已经有 30 年的历史了，它在使用和流行方面都经历了稳步的增长，足以使它成为几乎所有排行榜的榜首。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003ePython 的伟大之处在于它是根据开发者的经验编写的。从实践来看，这意味着它读起来就像英语一样：特别是对于没有编程背景的人来说，学习起来更容易。\u003c/p\u003e\n\u003cp\u003e同时，它也能非常快速地构建任何东西的基本原型，这使得初学者能够在短短几分钟内编写出具有良好教程的函数代码，从而极大地增强了他们的能力，也使他们得到了回报。\u003c/p\u003e\n\u003cp\u003e最后，它具有广泛的通用性。无论你的需求是数据科学，机器学习还是 Web 开发，你都可以通过 Python 来完成。\u003c/p\u003e\n\u003cp\u003e总之，Python 的语法，易用性和通用性使其成为最受初学者欢迎的编程语言。\n初学者学习 Python 的最佳方法\u003c/p\u003e\n\u003cp\u003ePython 是最受初学者欢迎的编程语言，因为它为全新的开发者提供了强大的支持网络。你可以使用 Python.org[7] 上面向初学者的免费教程开始编程。\u003c/p\u003e\n\u003cp\u003e你还应该利用 Python 用户和爱好者组成的丰富而富有支持性的在线社区。大部分 Python 支持者会记得自己学习 Python 的时光，并乐意向初学者伸出援手。浏览 Reddit 论坛上的 Python 版块[8]，在 Stack Overflow 上阅读和发布 Python 问题[9]，看看是否能在 Discord 小组或 Slack 频道上找到编程伙伴。\u003c/p\u003e\n\n\u003ch3 id=\"02-对不想从事编程工作的人来说最流行的编程语言是-r\"\u003e\u003ca href=\"#02-%e5%af%b9%e4%b8%8d%e6%83%b3%e4%bb%8e%e4%ba%8b%e7%bc%96%e7%a8%8b%e5%b7%a5%e4%bd%9c%e7%9a%84%e4%ba%ba%e6%9d%a5%e8%af%b4%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80%e6%98%af-r\"\u003e02 对不想从事编程工作的人来说，最流行的编程语言是 R\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e当我担任客户成功经理时，我的工作完全不涉及编程。但是，我仍然发现能够在 R 中进行分析，查看保留率、流失率、交流量等等，这是非常有用的。R 是另一种开源编程语言，尽管没有 Python 那么流行，但在数据科学界仍然非常活跃，深受人们欢迎。\u003c/p\u003e\n\u003cp\u003e若要找一份非编程的工作，R 是最流行的编程语言。它正在取代 SQL 和 SAS 这些闭源的付费语言。由于企业既想降低成本，又想雇佣无论日常工作中是否编程，都能进行分析的人，他们都在转向 R。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e为什么这么流行？\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eDatacamp[11] 在其 R 与 Python 教程中，如此写道，R 被“没有计算机编程技能的统计学家、工程师和科学家所使用。它在学术界、金融、制药、媒体和市场营销中都很流行”。\u003c/p\u003e\n\u003cp\u003e对于那些出于某些非常正当理由而不在工作中进行编程的人来说，R 是最流行的编程语言。首先，它是开源的。和 Python 一样，无需支付任何费用。\u003c/p\u003e\n\u003cp\u003eR 还提供了集成的开发编辑器 RStudio[12]，使其更容易使用。R 有一个强大的开源软件包生态系统，使任何人都可以非常简单地用几行代码运行统计分析，并以几行代码创建出一个可供发布的图形。\n非程序员学习 R 的最佳方法\u003c/p\u003e\n\u003cp\u003e尤其是对于那些没有或不想从事编程工作的人来说，我认为最好是找一个你真正关心的项[13]目，然后设定一个明确的目标。你没有工作的必要——至少现在你可以不知道如何编程。\u003c/p\u003e\n\u003cp\u003e你之前没有任何编程经验，所以学习曲线会非常陡峭。你需要一些你深深热爱的东西。只有这样才能让你克服令人沮丧的障碍、知识空白和用户错误，这也是每个编程初学者都需要经历的一次旅程。\u003c/p\u003e\n\n\u003ch3 id=\"03-最流行的涨薪编程语言perl\"\u003e\u003ca href=\"#03-%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e6%b6%a8%e8%96%aa%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80perl\"\u003e03 最流行的涨薪编程语言：Perl\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e根据 Stack Overflows 的调查[14]，Perl 是榜单上最矛盾的语言之一，因为它是全球薪资最高的语言（年薪中位数为 7.5 万美元），但也是最令人恐惧的语言（71.4%）。但是如果你想要在编程工作中获得更高的收入，没有比这更流行的编程语言了。它是更流行的 PHP 的前身，同时也是一门有点火爆的垃圾堆语言，因此而闻名。\u003c/p\u003e\n\u003cp\u003e博客 Some Dude Says[15] 在其博文《2020 年的 Perl，它还值得学习吗？》（Perl in 2020: Is It Still Worth Learning?）说，“Perl 试图为太多的人提供太多的东西。糟糕的代码片段飘来飘去，而且在很多项目中，未经深思熟虑就被拉进来。一个又一个的脚本小子拼凑出他们可憎的东西，并让它们在世界范围内散播。他们把源码扔到网上，让全世界也能免费看到。书里满是垃圾，而且即使是早已过时的书也要重印。”\u003c/p\u003e\n\u003cp\u003e尽管很多开发者不喜欢它，但很多雇主发现它是一种非常有用的编程语言，可以用于新的项目，也可以用于维护现有的基础结构和项目。正因为如此，它仍然是最流行的涨薪编程语言。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003eOpensource.com 将亚马逊、波音、BBC 和 Northrop Grumman 列为寻找 Perl 开发人员的大公司的一员。它是一种很受雇主欢迎的编程语言。与 R 和 Python 一样，它也是开源的，这意味着低成本和低风险的使用。许多用户（例如，在 Reddit 论坛的 Perl 子版块[16]上）都说它是一种范围广泛，但功能有限的语言，使得它既简单又实用。\u003c/p\u003e\n\u003cp\u003e人们对其不满的主要原因，可能是上面那篇博文中所列举的各种因素的遗留，开源的本质让这门语言失望了，并使其良好的名声陷入了泥潭。\u003c/p\u003e\n\u003cp\u003e但是，随着 Perl 的最新版本修复了很多用户体验问题，以及即将发布的 Perl 7, Perl 的流行度可能会再次缓慢攀升，尤其是鉴于 Perl 在雇主中需求很大，尽管 Perl 作为一门编程语言存在诸多缺陷，但雇主认为它是一种出色的技能，这使得它在这个最流行的编程语言榜单上占有一席之地。\n希望加薪的开发人员学习 Perl 的最佳方法\u003c/p\u003e\n\u003cp\u003elearn.perl.org[17] 网站可能是开始学习 Perl 最好的地方。与 R 和 Python 不同，很多用户都是从 Google 搜索和复制粘贴代码块中学习的，最好远离 Stack Overflow 这样的地方，因为那里可能有糟糕的代码片段。Modern Perl[18] 也是一个相对较新的文档，可以避免许多过时的、固执己见的教程，而 Perl Cookbook[19] 则是经过实践检验的资源。\u003c/p\u003e\n\n\u003ch3 id=\"04-ios-上最流行的移动应用开发编程语言swift\"\u003e\u003ca href=\"#04-ios-%e4%b8%8a%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8%e5%bc%80%e5%8f%91%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80swift\"\u003e04 iOS 上最流行的移动应用开发编程语言：Swift\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eR、Python 和 Perl 都是上个世纪开发的。而 Swift 则是 2014 年才被特别地开发成苹果的编程语言。顾名思义（译注：swift 即迅速的意思，也是一种鸟类雨燕的名词），它以快速构建 iOS 应用而著称，迅速超越了最初为此而生的 Objective-C。\u003c/p\u003e\n\u003cp\u003e苹果官网自称[20] Swift 比 Objective-C 快 2.6 倍，比 Python 快 8.4 倍。尽管它是一门年轻的语言，但在 Stack Overflow 的 2020 年开发者调查中，它是最流行的第 9 种语言。要编写 iOS 应用，没有其他最流行的编程语言[21]。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003e在 Dummies.com[22] 上写道：“开发 iOS 应用可能是你多年来职业生涯中最有趣的事情，投入的时间和金钱都很少（与 Windows 等平台的开发相比）。”对于那些想写代码的人来说，开发应用是展示你的技能，甚至可以从中赚点钱的好方法。\u003c/p\u003e\n\u003cp\u003e与 Android 应用相比，iOS 拥有更强大的开发者程序，并且处理了在商店中创建和托管应用程序所面临的许多棘手问题。开发 iOS 应用的速度也比 Android 更快[23]。\u003c/p\u003e\n\u003cp\u003e基于这些原因，对于那些想要开发 iOS 移动应用的人来说，Swift 是最流行的编程语言。\n应用程序开发者学习 Swift 的最佳方法\u003c/p\u003e\n\u003cp\u003e显然，苹果在帮助开发者学习 Swift 方面有着既得利益，所以它是开源的。苹果公司居然开发了一款名为 Swift Playground[24] 的应用，该应用旨在帮助初级编程者学习 Swift 的基础知识，同时还提供其他一些资源[25]来帮助用户学习。如果你的编程水平比较高，或者想业余时间学习 Swift。\u003c/p\u003e\n\u003cp\u003e之后，最好的方法就是干脆脚踏实地，用 Swift 设计你的第一个应用[26]。\u003c/p\u003e\n\n\u003ch3 id=\"05-横向思维者中最流行的编程语言ruby\"\u003e\u003ca href=\"#05-%e6%a8%aa%e5%90%91%e6%80%9d%e7%bb%b4%e8%80%85%e4%b8%ad%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80ruby\"\u003e05 横向思维者中最流行的编程语言：Ruby\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eRuby 是最受初创企业欢迎的编程语言[27]之一——这是一种有不止一种方式的语言，其非常简单的语法使得许多初创企业具有“快速行动，打破常规”的风气，而这种风气也受到了横向思维者的青睐。\u003c/p\u003e\n\u003cp\u003eRuby on Rails 是一个运行 Ruby 的全栈 Web 应用框架，而且由于它很容易在很短的时间内构建 Web 应用，所以很受欢迎。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003e对于许多初学者来说，使用像 Python 这样的语言工作可能会感到一些局限性[28]，因为在这种语言中，通常只有一种方法来完成工作。Ruby 简单的语法允许灵活的方法，这对于那些正在学习第二种编程语言的人来说是个福音，对于那些更喜欢从另一个角度思考问题的人来说也是个福音。这使得 Ruby 在 2021 年最流行的编程语言榜单中名列前茅。\n横向思维者学习 Ruby 的最佳方法\u003c/p\u003e\n\u003cp\u003e由于 Ruby 的动态性，因此没有一种单一的学习方法。尽管理解诸如变量、数据结构和条件语句等核心编程概念非常重要，但 Ruby 和 Ruby on Rails 的简单性意味着，一旦你掌握了基础知识，下一步应该是尝试构建一个自己的简单的 Web 应用。\u003c/p\u003e\n\n\u003ch3 id=\"06-最流行的移动应用和-web-开发编程语言javascript\"\u003e\u003ca href=\"#06-%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8%e5%92%8c-web-%e5%bc%80%e5%8f%91%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80javascript\"\u003e06 最流行的移动应用和 Web 开发编程语言：JavaScript\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eJavaScript 是最流行的 Web 编程语言，负责交互式网站。它开发于 1995 年，作为当今最主要的客户端脚本语言，95% 的网站[29]都在使用 JavaScript。随着 Node.js 的开发，很多人也开始将 JavaScript 用于服务器端。它与 CSS 和 HTML 一起，构建了你随时访问万维网时看到的东西。\u003c/p\u003e\n\u003cp\u003e根据 Stack Overflow 的 2020 年开发者调查，它已经连续八年成为使用最多的语言[30]。对任何开发人员来说，只要网站存在，JavaScript 就会有用。显然，这对任何 Web 开发人员都是必须掌握的。即便你不想成为一个 Web 开发人员，建立自己网站的能力（现在常常用来制作简历和作品集）也是一 个吸引人的技巧，值得展示。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003e对于 Web 开发和移动应用来说，JavaScript 是最流行的编程语言，这一点是非常了不起的，因为它是作为对第一次浏览器战争的回应而在短短十天内创建[31]的。\u003c/p\u003e\n\u003cp\u003e它之所以如此流行，是因为它无处不在，但要了解它为什么无处不在也很好。首先，它可以用于几乎所有的前端和后端 Web 开发，但也有一些框架的开发使它更进一步。例如，JavaScript 也用于 Slack 和 Skype 这样的桌面应用，它们使用 Electron.js[32]。Vue.js[33]、Angular.js[34] 和 React.js[35] 是独立的 JavaScript 网络框架，用于构建用户界面，分别由谷歌前员工 Evan You、谷歌和 Facebook 开发。\u003c/p\u003e\n\u003cp\u003e它也是标准化的，这意味着经常有新版本的更新和发布。无论你的编程生涯处于什么阶段，这门语言都能为你提供一些东西。\nWeb 开发人员学习 JavaScript 的最佳方法\u003c/p\u003e\n\u003cp\u003e如果你搜索“学习 JavaScript”，很容易被大量的信息、教程和指南所淹没。甚至很难知道你需要哪些框架和库。这就是为什么我推荐一种分层次的方法，使你能够系统地、持续地学习 Web 开发人员最流行的编程语言。一些例子包括《Node.js 开发实战》（JS: The Right Way[36]），以及 Qvault 的《编程基础入门》（Basic Intro to Coding[37]）。\u003c/p\u003e\n\n\u003ch3 id=\"07-能快速涨薪的最流行编程语言go\"\u003e\u003ca href=\"#07-%e8%83%bd%e5%bf%ab%e9%80%9f%e6%b6%a8%e8%96%aa%e7%9a%84%e6%9c%80%e6%b5%81%e8%a1%8c%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80go\"\u003e07 能快速涨薪的最流行编程语言：Go\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eGo 是由 Google 开发的，受到了编程语言巨头 C 的影响，但它是为了避免 C++ 的缺陷，而 C++ 被 Go 开发人员普遍鄙视[38]。其目的是创建一种适合在庞大代码库时代使用的语言。现在它已经被几家大公司使用[39]，谷歌显然是其中之一，但 Uber、Twitch 和 Dropbox 也在其中。\u003c/p\u003e\n\u003cp\u003e在 Stack Overflows 的开发者调查中，它在最流行的语言排行榜[40]上排名第三（17.9%），同时也是全球最高的薪资中位数[41]（7.4 万美元）。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003e它是最流行的编程语言，对于想要快速提高收入的开发人员来说，有几个原因。首先，它是一门为大型项目而生的语言。例如，与 Ruby 不同，Ruby 的构建速度快，但是很难扩展，而 Go 是谷歌为帮助他们更快地处理大型项目和任务而有意创建的。谷歌为了减少阅读和调试代码所需的时间，专门创建了 Go，以便使这些任务变得可行。这样，它就成了许多旨在实现该规模项目的大公司的吸引力语言。\u003c/p\u003e\n\u003cp\u003e它还被誉为比 Perl 更快、也更容易学习，在最高薪资排行榜上名列前茅。Perl 拥有数十年的历史和意见，而 Go 是 2009 年才创建的，它的语法更简洁，也更现代。数据工程师 Samuel Jones 在使用 Go 构建了一个 API[42] 之后，发表了一篇关于 Go 的评论，他认为，Go 不像很多词汇表臃肿的编程语言，它小到足以“装进你的大脑”。这样可以减少在线和参考书中搜索答案和语法的时间。\u003c/p\u003e\n\u003cp\u003e仅仅通过阅读来学习 Go 也是可能的，因为它的语法非常清晰，即使是不熟悉它的人，甚至是不懂编程的人，也能阅读代码，并理解它所发生的一切。\n希望快速涨薪的程序员学习 Go 的最佳方法\u003c/p\u003e\n\u003cp\u003e作为谷歌为互联网打造的一门语言，可想而知会有几个免费的网络资源可以帮助你踏上学习之路。首先，有几个资源都值得推荐：《Go 语言之旅》（A Tour of Go[43]），在那里你可以学习使用 Go。它是交互式的，你可以在网站本身运行自己的代码片段。它被划分为不同的模块，这样就可以很容易地跟踪你所在的位置，并在必要时进行回溯。\u003c/p\u003e\n\u003cp\u003e一旦你掌握了基础知识，其他一些很棒的资源，包括《实例学习 Go 语言》（Go By Example[44]）和《精通 Go》（Go Mastery[45]），在这些资源中，你将学会如何发现代码的实例，用于典型或常见的任务。\u003c/p\u003e\n\n\u003ch3 id=\"08-2022-年最流行的编程语言rust\"\u003e\u003ca href=\"#08-2022-%e5%b9%b4%e6%9c%80%e6%b5%81%e8%a1%8c%e7%9a%84%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80rust\"\u003e08 2022 年最流行的编程语言：Rust\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e根据 2020 年 Stack Overflow 的开发者调查[46]，Rust 连续五年成为最流行的语言，并且是排名第五的最想使用的语言（14.6%）。那么，为什么尽管它客观上是最受欢迎的编程语言，却没有排在榜首呢？因为根据同一份调查，97% 的调查对象[47]从未使用过 Rust。它的未来也不明朗。\u003c/p\u003e\n\u003cp\u003eMozilla 在 2009 年赞助了 Rust 的开发，并在 2010 年宣布 Rust[48]。它被视为其他系统编程语言[49]（例如 C 或 C++）的替代方案，根据它的\u003ca href=\"https://en.wikipedia.org/wiki/Rust_(programming_language\" title=\"维基百科词条\"\u003e维基百科词条\u003c/a\u003e#cite_ref-30)，它是一种用于高度并发和高度安全系统的语言。这对于开发人员来说，意味着他们能够快速高效地编写安全的代码。\u003c/p\u003e\n\u003cp\u003e但由于新冠肺炎疫情，Mozilla 裁掉了 Rust 团队的大部分人员[50]，专注于商业产品。虽然他们已经宣布，将会成立一个基金会，以掌握未来的所有权和 Rust 的成本，但目前还没有确定运作方式。\n为什么如此流行？\u003c/p\u003e\n\u003cp\u003e假设 Rust 能够克服当前的困难，我预期它将会逐年变得更加流行。它拥有一个由当前开发人员组成的专用粉丝群，越来越多的开发人员对学习它感兴趣。虽然它可能不会在 2021 年的排行榜上名列前茅，但我相信，它有望成为 2022 年或以后最流行的编程语言。\u003c/p\u003e\n\u003cp\u003e在易于学习方面，许多开发人员[51]将它与 C++ 进行了比较。对许多开发人员来说，安全代码的优先级可能是令人沮丧的，因为他们在输入代码时只会得到令人恼火的错误信息，但这可能是一种转变，从“快速行动，打破陈规”的心态，更多地转向更安全、结构更合理的代码库。\u003c/p\u003e\n\u003cp\u003e它既可以应用于长期以来的开发必需品，也可以应用于更多未来主义的事业。Mozilla[52] 关于它的网页描述了它的应用范围：“游戏引擎、操作系统、文件系统、浏览器组件和虚拟现实的模拟引擎。”\u003c/p\u003e\n\u003cp\u003e由于这些原因，Rust 可能是未来最流行的编程语言。\n2022 年最流行的编程语言学习 Rust 的最佳方法\u003c/p\u003e\n\u003cp\u003e由于 Rust 非常注重安全和结构，开发人员会花费很多时间和资源来确保错误信息是用户友好的，这与许多其他编程语言不同。这使得初学者学习起来特别有意义，因为他们在犯错误的时候很容易就能改正。\u003c/p\u003e\n\u003cp\u003eRust 网站[53]提供了三种尝试的途径：阅读名为“The Book[54]”的书，通过小项目尝试 Rustlings Course[55]，以帮助入门和运行，以及《实例学 Rust》（Rust By Example[56]），它阐明了支撑 Rust 的概念和库。所有这些资源都是免费的。\u003c/p\u003e\n\u003cp\u003e正如 Reddit 论坛[57]上的一个网友所指出的那样，这是一门相对较新的语言，因为很多问题的答案，还没有在 Stack Overflow 这样的地方发布和回答。出于这一原因，他们建议加入 Discord 频道，以此作为获得导师和支持性社区学习 Rust 的途径。\n总结\u003c/p\u003e\n\u003cp\u003e正如你从这个列表所看到的，现在有很多编程语言可供选择，其中很多都是最近才出现的。尽管一些语言在客观上比另一些语言更适合于特定的任务，但是大多数语言对某些人是有益的。如果你想学习 2021 年最流行的编程语言，你首先要决定你想从学习编程语言中得到什么。\u003c/p\u003e\n\u003cp\u003e不管你坐在哪里，保持对趋势的关注，并确保你的编程游戏处于领先地位，这总归是一件好事。超过 70%[58] 的专业水平的开发人员每年至少学习一次新的编程技能。为什么不从 2021 年开始，使用一种 2021 年最流行的编程语言，优先考虑你未来的技能呢？这个列表将帮助你选择一个或多个来开始学习之旅。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e原文作者：Zulie Rane\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e原文链接\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehttps://towardsdatascience.com/the-8-most-popular-coding-languages-of-2021-b3dccb004635\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"参考资料\"\u003e\u003ca href=\"#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99\"\u003e参考资料\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e[1]\u003c/p\u003e\n\u003cp\u003e希望获得加薪: \u003ca href=\"https://qvault.io/2020/12/09/highest-paying-computer-science-jobs/\"\u003ehttps://qvault.io/2020/12/09/highest-paying-computer-science-jobs/\u003c/a\u003e\n[2]\u003c/p\u003e\n\u003cp\u003e从事初级编程工作: \u003ca href=\"https://qvault.io/2020/11/19/getting-a-job-after-coding-bootcamp-is-hard/\"\u003ehttps://qvault.io/2020/11/19/getting-a-job-after-coding-bootcamp-is-hard/\u003c/a\u003e\n[3]\u003c/p\u003e\n\u003cp\u003e初学者最佳编程语言: \u003ca href=\"https://qvault.io/2020/10/07/top-4-coding-languages-to-learn-for-beginners-2020/\"\u003ehttps://qvault.io/2020/10/07/top-4-coding-languages-to-learn-for-beginners-2020/\u003c/a\u003e\n[4]\u003c/p\u003e\n\u003cp\u003eGitHub 的排名: \u003ca href=\"https://pypl.github.io/PYPL.html\"\u003ehttps://pypl.github.io/PYPL.html\u003c/a\u003e\n[5]\u003c/p\u003e\n\u003cp\u003eStack Overflow 的开发者调查: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-wanted\"\u003ehttps://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-wanted\u003c/a\u003e\n[6]\u003c/p\u003e\n\u003cp\u003e最热门语言: \u003ca href=\"https://cacm.acm.org/blogs/blog-cacm/176450-python-is-now-the-most-popular-introductory-teaching-language-at-top-u-s-universities/fulltext\"\u003ehttps://cacm.acm.org/blogs/blog-cacm/176450-python-is-now-the-most-popular-introductory-teaching-language-at-top-u-s-universities/fulltext\u003c/a\u003e\n[7]\u003c/p\u003e\n\u003cp\u003ePython.org: \u003ca href=\"https://www.python.org/about/gettingstarted/\"\u003ehttps://www.python.org/about/gettingstarted/\u003c/a\u003e\n[8]\u003c/p\u003e\n\u003cp\u003ePython 版块: \u003ca href=\"https://www.reddit.com/r/Python/\"\u003ehttps://www.reddit.com/r/Python/\u003c/a\u003e\n[9]\u003c/p\u003e\n\u003cp\u003ePython 问题: \u003ca href=\"https://stackoverflow.com/questions/tagged/python\"\u003ehttps://stackoverflow.com/questions/tagged/python\u003c/a\u003e\n[10]\u003c/p\u003e\n\u003cp\u003eNing: \u003ca href=\"https://st1.ning.com/topology/rest/1.0/file/get/3840441960?profile=original\"\u003ehttps://st1.ning.com/topology/rest/1.0/file/get/3840441960?profile=original\u003c/a\u003e\n[11]\u003c/p\u003e\n\u003cp\u003eDatacamp: \u003ca href=\"https://s3.amazonaws.com/assets.datacamp.com/email/other/Python+vs+R.pdf\"\u003ehttps://s3.amazonaws.com/assets.datacamp.com/email/other/Python+vs+R.pdf\u003c/a\u003e\n[12]\u003c/p\u003e\n\u003cp\u003e开发编辑器 RStudio: \u003ca href=\"https://rstudio.com/products/rstudio/download/\"\u003ehttps://rstudio.com/products/rstudio/download/\u003c/a\u003e\n[13]\u003c/p\u003e\n\u003cp\u003e你真正关心的项: \u003ca href=\"https://towardsdatascience.com/the-fastest-way-to-learn-to-code-be-invested-in-your-numbers-ccb24d55d856\"\u003ehttps://towardsdatascience.com/the-fastest-way-to-learn-to-code-be-invested-in-your-numbers-ccb24d55d856\u003c/a\u003e\n[14]\u003c/p\u003e\n\u003cp\u003eStack Overflows 的调查: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages\"\u003ehttps://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages\u003c/a\u003e\n[15]\u003c/p\u003e\n\u003cp\u003e博客 Some Dude Says: \u003ca href=\"https://somedudesays.com/2020/02/perl-in-2020-is-it-still-worth-learning/\"\u003ehttps://somedudesays.com/2020/02/perl-in-2020-is-it-still-worth-learning/\u003c/a\u003e\n[16]\u003c/p\u003e\n\u003cp\u003ePerl 子版块: \u003ca href=\"https://www.reddit.com/r/perl/comments/5g25ak/why_should_i_learn_perl_6/\"\u003ehttps://www.reddit.com/r/perl/comments/5g25ak/why_should_i_learn_perl_6/\u003c/a\u003e\n[17]\u003c/p\u003e\n\u003cp\u003elearn.perl.org: \u003ca href=\"https://learn.perl.org/books/beginning-perl/\"\u003ehttps://learn.perl.org/books/beginning-perl/\u003c/a\u003e\n[18]\u003c/p\u003e\n\u003cp\u003eModern Perl: \u003ca href=\"http://onyxneon.com/books/modern_perl/modern_perl_a4.pdf\"\u003ehttp://onyxneon.com/books/modern_perl/modern_perl_a4.pdf\u003c/a\u003e\n[19]\u003c/p\u003e\n\u003cp\u003ePerl Cookbook: \u003ca href=\"http://rgonzo.us/shiny/books/perlcookbook.pdf\"\u003ehttp://rgonzo.us/shiny/books/perlcookbook.pdf\u003c/a\u003e\n[20]\u003c/p\u003e\n\u003cp\u003e苹果官网自称: \u003ca href=\"https://www.apple.com/swift/\"\u003ehttps://www.apple.com/swift/\u003c/a\u003e\n[21]\u003c/p\u003e\n\u003cp\u003e最流行的编程语言: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages\"\u003ehttps://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages\u003c/a\u003e\n[22]\u003c/p\u003e\n\u003cp\u003eDummies.com: \u003ca href=\"https://www.dummies.com/web-design-development/mobile-apps/why-develop-ios-applications/\"\u003ehttps://www.dummies.com/web-design-development/mobile-apps/why-develop-ios-applications/\u003c/a\u003e\n[23]\u003c/p\u003e\n\u003cp\u003e更快: \u003ca href=\"https://infinum.com/the-capsized-eight/android-development-is-30-percent-more-expensive-than-ios\"\u003ehttps://infinum.com/the-capsized-eight/android-development-is-30-percent-more-expensive-than-ios\u003c/a\u003e\n[24]\u003c/p\u003e\n\u003cp\u003eSwift Playground: \u003ca href=\"https://www.apple.com/swift/playgrounds/\"\u003ehttps://www.apple.com/swift/playgrounds/\u003c/a\u003e\n[25]\u003c/p\u003e\n\u003cp\u003e其他一些资源: \u003ca href=\"https://swift.org/getting-started/\"\u003ehttps://swift.org/getting-started/\u003c/a\u003e\n[26]\u003c/p\u003e\n\u003cp\u003e用 Swift 设计你的第一个应用: \u003ca href=\"https://developer.apple.com/library/archive/referencelibrary/GettingStarted/DevelopiOSAppsSwift/\"\u003ehttps://developer.apple.com/library/archive/referencelibrary/GettingStarted/DevelopiOSAppsSwift/\u003c/a\u003e\n[27]\u003c/p\u003e\n\u003cp\u003e初创企业欢迎的编程语言: \u003ca href=\"https://stackify.com/popular-programming-languages-2018/#:~:text=Ruby%20is%20one%20of%20the%20most%20popular%20languages%20among%20tech%20startups.\u0026amp;text=First%2C%20Ruby%20has%20an%20incredibly,time%20than%20in%20other%20frameworks\"\u003ehttps://stackify.com/popular-programming-languages-2018/#:~:text=Ruby%20is%20one%20of%20the%20most%20popular%20languages%20among%20tech%20startups.\u0026amp;text=First%2C%20Ruby%20has%20an%20incredibly,time%20than%20in%20other%20frameworks\u003c/a\u003e.\n[28]\u003c/p\u003e\n\u003cp\u003e局限性: \u003ca href=\"http://wiki.c2.com/?PythonVsRuby\"\u003ehttp://wiki.c2.com/?PythonVsRuby\u003c/a\u003e\n[29]\u003c/p\u003e\n\u003cp\u003e95% 的网站: \u003ca href=\"https://w3techs.com/technologies/details/cp-javascript/\"\u003ehttps://w3techs.com/technologies/details/cp-javascript/\u003c/a\u003e\n[30]\u003c/p\u003e\n\u003cp\u003e使用最多的语言: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#most-popular-technologies\"\u003ehttps://insights.stackoverflow.com/survey/2020#most-popular-technologies\u003c/a\u003e\n[31]\u003c/p\u003e\n\u003cp\u003e短短十天内创建: \u003ca href=\"https://news.codecademy.com/javascript-history-popularity/#:~:text=Server%2Dside%20JavaScript%20gained%20popularity,languages%20to%20communicate%20with%20databases.\u0026amp;text=JS%2C%20or%20Node%2C%20is%20one,versions%20of%20server%2Dside%20JavaScript\"\u003ehttps://news.codecademy.com/javascript-history-popularity/#:~:text=Server%2Dside%20JavaScript%20gained%20popularity,languages%20to%20communicate%20with%20databases.\u0026amp;text=JS%2C%20or%20Node%2C%20is%20one,versions%20of%20server%2Dside%20JavaScript\u003c/a\u003e.\n[32]\u003c/p\u003e\n\u003cp\u003eElectron.js: \u003ca href=\"https://angularjs.org/\"\u003ehttps://angularjs.org/\u003c/a\u003e\n[33]\u003c/p\u003e\n\u003cp\u003eVue.js: \u003ca href=\"https://angularjs.org/\"\u003ehttps://angularjs.org/\u003c/a\u003e\n[34]\u003c/p\u003e\n\u003cp\u003eAngular.js: \u003ca href=\"https://angularjs.org/\"\u003ehttps://angularjs.org/\u003c/a\u003e\n[35]\u003c/p\u003e\n\u003cp\u003eReact.js: \u003ca href=\"https://reactjs.org/\"\u003ehttps://reactjs.org/\u003c/a\u003e\n[36]\u003c/p\u003e\n\u003cp\u003eJS: The Right Way: \u003ca href=\"http://jstherightway.org/\"\u003ehttp://jstherightway.org/\u003c/a\u003e\n[37]\u003c/p\u003e\n\u003cp\u003eBasic Intro to Coding: \u003ca href=\"https://qvault.io/basic-intro-to-coding-course/\"\u003ehttps://qvault.io/basic-intro-to-coding-course/\u003c/a\u003e\n[38]\u003c/p\u003e\n\u003cp\u003e鄙视: \u003ca href=\"https://www.drdobbs.com/open-source/interview-with-ken-thompson/229502480\"\u003ehttps://www.drdobbs.com/open-source/interview-with-ken-thompson/229502480\u003c/a\u003e\n[39]\u003c/p\u003e\n\u003cp\u003e大公司使用: \u003ca href=\"https://brainhub.eu/library/companies-using-golang/\"\u003ehttps://brainhub.eu/library/companies-using-golang/\u003c/a\u003e\n[40]\u003c/p\u003e\n\u003cp\u003e最流行的语言排行榜: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted\"\u003ehttps://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted\u003c/a\u003e\n[41]\u003c/p\u003e\n\u003cp\u003e全球最高的薪资中位数: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#technology-what-languages-are-associated-with-the-highest-salaries-worldwide\"\u003ehttps://insights.stackoverflow.com/survey/2020#technology-what-languages-are-associated-with-the-highest-salaries-worldwide\u003c/a\u003e\n[42]\u003c/p\u003e\n\u003cp\u003eGo 构建了一个 API: \u003ca href=\"https://willowtreeapps.com/ideas/the-pros-and-cons-of-programming-in-go#:~:text=Go's%20syntax%20is%20small%20compared,of%20time%20looking%20things%20up.\u0026amp;text=Non%2DGo%20programmers%2C%20especially%20those,usually%20understand%20what's%20going%20on\"\u003ehttps://willowtreeapps.com/ideas/the-pros-and-cons-of-programming-in-go#:~:text=Go's%20syntax%20is%20small%20compared,of%20time%20looking%20things%20up.\u0026amp;text=Non%2DGo%20programmers%2C%20especially%20those,usually%20understand%20what's%20going%20on\u003c/a\u003e.\n[43]\u003c/p\u003e\n\u003cp\u003eA Tour of Go: \u003ca href=\"https://tour.golang.org/welcome/1\"\u003ehttps://tour.golang.org/welcome/1\u003c/a\u003e\n[44]\u003c/p\u003e\n\u003cp\u003eGo By Example: \u003ca href=\"https://gobyexample.com/\"\u003ehttps://gobyexample.com/\u003c/a\u003e\n[45]\u003c/p\u003e\n\u003cp\u003eGo Mastery: \u003ca href=\"https://qvault.io/go-mastery-course/\"\u003ehttps://qvault.io/go-mastery-course/\u003c/a\u003e\n[46]\u003c/p\u003e\n\u003cp\u003eStack Overflow 的开发者调查: \u003ca href=\"http://jstherightway.org/\"\u003ehttp://jstherightway.org/\u003c/a\u003e\n[47]\u003c/p\u003e\n\u003cp\u003e97% 的调查对象: \u003ca href=\"https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/\"\u003ehttps://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/\u003c/a\u003e\n[48]\u003c/p\u003e\n\u003cp\u003e2010 年宣布 Rust: \u003ca href=\"http://venge.net/graydon/talks/intro-talk-2.pdf\"\u003ehttp://venge.net/graydon/talks/intro-talk-2.pdf\u003c/a\u003e\n[49]\u003c/p\u003e\n\u003cp\u003e系统编程语言: \u003ca href=\"https://en.wikipedia.org/wiki/System_programming\"\u003ehttps://en.wikipedia.org/wiki/System_programming\u003c/a\u003e\n[50]\u003c/p\u003e\n\u003cp\u003e裁掉了 Rust 团队的大部分人员: \u003ca href=\"https://insights.dice.com/2020/08/27/rust-in-trouble-after-big-mozilla-layoffs/\"\u003ehttps://insights.dice.com/2020/08/27/rust-in-trouble-after-big-mozilla-layoffs/\u003c/a\u003e\n[51]\u003c/p\u003e\n\u003cp\u003e许多开发人员: \u003ca href=\"https://www.reddit.com/r/rust/comments/7rza1q/why_is_rust_difficult/dt0rp4o?utm_source=share\u0026amp;utm_medium=web2x\u0026amp;context=3\"\u003ehttps://www.reddit.com/r/rust/comments/7rza1q/why_is_rust_difficult/dt0rp4o?utm_source=share\u0026amp;utm_medium=web2x\u0026amp;context=3\u003c/a\u003e\n[52]\u003c/p\u003e\n\u003cp\u003eMozilla: \u003ca href=\"https://research.mozilla.org/rust\"\u003ehttps://research.mozilla.org/rust\u003c/a\u003e\n[53]\u003c/p\u003e\n\u003cp\u003eRust 网站: \u003ca href=\"https://www.rust-lang.org/learn\"\u003ehttps://www.rust-lang.org/learn\u003c/a\u003e\n[54]\u003c/p\u003e\n\u003cp\u003eThe Book: \u003ca href=\"https://doc.rust-lang.org/book/\"\u003ehttps://doc.rust-lang.org/book/\u003c/a\u003e\n[55]\u003c/p\u003e\n\u003cp\u003eRustlings Course: \u003ca href=\"https://github.com/rust-lang/rustlings/\"\u003ehttps://github.com/rust-lang/rustlings/\u003c/a\u003e\n[56]\u003c/p\u003e\n\u003cp\u003eRust By Example: \u003ca href=\"https://doc.rust-lang.org/stable/rust-by-example/\"\u003ehttps://doc.rust-lang.org/stable/rust-by-example/\u003c/a\u003e\n[57]\u003c/p\u003e\n\u003cp\u003eReddit 论坛: \u003ca href=\"https://www.reddit.com/r/rust/comments/bijkzd/best_way_to_learn_rust/em20uik?utm_source=share\u0026amp;utm_medium=web2x\u0026amp;context=3\"\u003ehttps://www.reddit.com/r/rust/comments/bijkzd/best_way_to_learn_rust/em20uik?utm_source=share\u0026amp;utm_medium=web2x\u0026amp;context=3\u003c/a\u003e\n[58]\u003c/p\u003e\n\u003cp\u003e超过 70%: \u003ca href=\"https://insights.stackoverflow.com/survey/2020#technology-what-languages-are-associated-with-the-highest-salaries-worldwide-global\"\u003ehttps://insights.stackoverflow.com/survey/2020#technology-what-languages-are-associated-with-the-highest-salaries-worldwide-global\u003c/a\u003e\u003c/p\u003e\n","permalink":"/list/20210122b2021%E6%B5%81%E8%A1%8C%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/","title":"2021流行编程语言"},{"htmlString":"","permalink":"/tags/%E7%BC%96%E7%A8%8B/","title":"编程"},{"htmlString":"\u003cp\u003e分类：阅读笔记\u003c/p\u003e\n\u003cp\u003e标签：知识循环、笔记管理、笔记交互、Zettelkasten\u003c/p\u003e\n\u003cp\u003e原文：玩转 Obsidian | 打造知识循环利器\u003c/p\u003e\n\n\u003ch3 id=\"阅读理解\"\u003e\u003ca href=\"#%e9%98%85%e8%af%bb%e7%90%86%e8%a7%a3\"\u003e阅读理解\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e思路：笔记管理方法Zettelkasten，如何优秀，如何超越传统笔记管理\u003c/li\u003e\n\u003cli\u003e核心：卡片、索引\u003c/li\u003e\n\u003cli\u003e软件：从优秀昂贵的Roam Research ，到免费的Obsidian。\u003c/li\u003e\n\u003cli\u003e卡片：是笔记，可以是一段文章或论文的「摘录」，它也可以是我们对某个概念的「总结」，一张卡片或者说一篇笔记。结构3部分。唯一数字编号。\u003c/li\u003e\n\u003cli\u003e索引：插入数字编号，通过编号在卡片之间产生交互和关联\u003c/li\u003e\n\u003cli\u003e综上使得所有知识组成了一张网络，\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e认识2\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e卡片有一个或一组编号，索引编号组，一个或多个层级关系，形成逻辑表达。\u003c/li\u003e\n\u003cli\u003e卡片积累形成知识库，卡片编号。\u003c/li\u003e\n\u003cli\u003e综上，从传统分类，到分类+标签，到数字化分类和标签、多维表达。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e认识3\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e数字化分类和标签，数组(数字标签,文字标签)，一个索引序列，一次知识表达\u003c/li\u003e\n\u003cli\u003e模块化知识库，日积月累的笔记，不随时间推移而隐秘，知识可以循环\u003c/li\u003e\n\u003cli\u003e最终形式逻辑知识网络，温故而知新，对比新旧知识观点，\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"原文梳理\"\u003e\u003ca href=\"#%e5%8e%9f%e6%96%87%e6%a2%b3%e7%90%86\"\u003e原文梳理\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003eZettelkasten\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eZettelkasten 笔记管理方法，被称为「卡片盒笔记法」\u003c/li\u003e\n\u003cli\u003e优秀的 Roam Research 让大众开始认知此笔记管理法，但此软件也昂贵\u003c/li\u003e\n\u003cli\u003e大环境：知识付费时代\u003c/li\u003e\n\u003cli\u003e打造属于自己的「知识循环」体系\u003c/li\u003e\n\u003cli\u003e知识循环：指的是我们整理知识的目标一定是写作，在写作的过程中经历研究/阅读/记录和写作。\u003c/li\u003e\n\u003cli\u003e目前没有手机端。有个问题，linux为什么有那么多版本？ [^下载地址]: \u003ca href=\"https://obsidian.md/download\"\u003ehttps://obsidian.md/download\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eZettelkasten由来\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e德国学者 Niklas Luhmann（尼克拉斯·卢曼）是德国当代重要的社会学家。\u003c/li\u003e\n\u003cli\u003e卢曼自己总结的一套笔记管理方法，Zettelkasten 也被称为「卡片盒笔记法」或「卡片笔记法」。\u003c/li\u003e\n\u003cli\u003e卢曼家里就有这样一套家具6x4存放文档。\u003c/li\u003e\n\u003cli\u003e传统管理法 \u003cstrong\u003e弊端\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e文件夹管理法，分类管理法，严重限制了一篇笔记被发现的几率，阻碍创意或者灵感的产生。跟它明显对比的就是「标签」管理法。\u003c/li\u003e\n\u003cli\u003e标签管理法，逻辑性差，失去目标和方向\u003c/li\u003e\n\u003cli\u003e如何 \u003cstrong\u003e去除弊端\u003c/strong\u003e呢？\u003c/li\u003e\n\u003cli\u003e将 Evernote 中的笔记创建「知识图谱」，扩展知识管理的边界。\u003c/li\u003e\n\u003cli\u003eZettelkasten 的关键在「卡片」和 「索引」。\u003c/li\u003e\n\u003cli\u003e无论是采用文件夹管理还是标签管理，时间一长，就会很容易让我们陷入 \u003cstrong\u003e「收藏家谬论3/3」\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e1/3很多时候，我们收藏了一篇文章，就认为自己将来一定会读，所以自我感觉非常良好。\u003c/li\u003e\n\u003cli\u003e2/3如果收藏的文章一旦超过了我们的管理能力，它就会越积越多，最后变成一堆垃圾。\u003c/li\u003e\n\u003cli\u003e3/3即使我们对收藏了文章进行了阅读，他的意义依然不大，只会增加短期记忆，只有形成了笔记才能让知识参与到「知识循环」中。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eZettelkasten优势\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e会形成「知识网格」，优势3/3\u003c/li\u003e\n\u003cli\u003e1/3笔记越多，网越大，更容易从中找到内在的联系。\u003c/li\u003e\n\u003cli\u003e2/3当你带着问题或者一个想法去探索 Zettelkasten 时，就会想人类大脑思考那样，从一个线索跳转到另一个线索，是我们的思维更加活跃，更会激发我们的创造性。\u003c/li\u003e\n\u003cli\u003e3/3大量研究表明，非线性笔记比线性笔记更有利于学习，尤其适用图表和概念图，更能促使信息选择和组织。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eObsidian含免费本地管理\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eObsidian 就是一个支持 Zettelkasten 的笔记软件\u003c/li\u003e\n\u003cli\u003e什么是「双向链接」？明确一下「Topic」的概念。\u003c/li\u003e\n\u003cli\u003eTopic 是由「标题」和「内容」组成\u003c/li\u003e\n\u003cli\u003e卢曼在 Zettelkasten 中对于 \u003cstrong\u003e「卡片使用原则」中的定义\u003c/strong\u003e：\u003c/li\u003e\n\u003cli\u003e1/3原子性：即最小力度的说明一个概念，标准就是如果想在任何一个地方引用这个概念，都能用同一句话概括。在 Obsidian 中更加强调 Topic 的「标题」要具备「原子性」。\u003c/li\u003e\n\u003cli\u003e2/3自主性：先理解一个概念，在一本书中，它的每一页都是有上下文关系的，也就是说，每一页的存在位置是固定的，如果被挪走或删除，会影响这本书的内容完整性。\u003c/li\u003e\n\u003cli\u003e3/3自主性：在 Obsidian 中每个 Topic，不应该像「书中的每一页那样不能删除和移动」，它应该是自主的，能够独立说明一件事，可以被独立理解。也就是它和临近的「笔记」没有任何「依赖」关系，可以随意被移动、分离和连接。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e双向链接\u003c/strong\u003e：当 A 页面通过 [[B]] 关联了 B 页面时，在 A 页面可以通过「双向链接」跳转到 B 页面，同时在 B 页面中也可以看到 A 页面引用了自己。\u003c/li\u003e\n\u003cli\u003e打造知识循环利器。Obsidian 的特性和功能非常有利于我们打造「知识循环」体系，从课题的的阅读到记录再到写作，在同一个软件形成「闭环」。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e神评论\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e保存到本地markdown有两种，一种纯粹markdown，文章内图片是链接形式；另一种离线markdown内嵌图片，图片以base64编码在文件里，图片比较多比较大时，会影响编辑器的解析性能。\u003c/li\u003e\n\u003cli\u003e「话题引用」和「别名引用」\u003c/li\u003e\n\u003cli\u003eObsidian 是一款笔记管理软件，因为我用它完成「知识循环」，所以我更在意如何用 Obsidian 完成知识收集和整理以及后续的输出\u003c/li\u003e\n\u003cli\u003e网页文字收藏 [^网页插件剪切收藏]: \u003ca href=\"https://mika-cn.github.io/maoxian-web-clipper/index-zh-CN.html\"\u003ehttps://mika-cn.github.io/maoxian-web-clipper/index-zh-CN.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e网址收藏插件 [^网址收藏插件]: \u003ca href=\"https://github.com/GHPen/alfred-url-actions\"\u003ehttps://github.com/GHPen/alfred-url-actions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e「富文本编辑器」的图片归属于这个文件，而「文本工具」只有「文本」归属于这个文件，图片是「附件」所以你才看到插入图片需要使用 MarkDown 语法而不是像 Evernote 那样直接可以拷贝进去。\u003c/li\u003e\n\u003cli\u003eObsidian 我认为适合文字组织和大纲，不适合最终产出，我一般是利用 Obsidian 的文字组织能力，将大纲完成（甚至几乎是最终稿），然后拷贝到 Ulysses 中最终完成编辑、排版和发布\u003c/li\u003e\n\u003cli\u003e双向链接在适当的地方确实非常好用。我觉得目前市面上宣传双向笔记的文章全都跑偏了，都在讲具体操作。很少有人能讲方法论，什么类型应该用双向笔记，什么类型不应该用。或者先写几篇看起来无关的笔记，然后一步一步教读者如何拆分和连接。这样才能真正凸现出双向连接的价值。\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"边界扩展\"\u003e\u003ca href=\"#%e8%be%b9%e7%95%8c%e6%89%a9%e5%b1%95\"\u003e边界扩展\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e之前阅读中，也常常看到 \u003cstrong\u003e双向链接\u003c/strong\u003e，也没有关注到底是什么功能\u003c/li\u003e\n\u003cli\u003e其实很多软件都开始支持，双向链接。\u003c/li\u003e\n\u003cli\u003e其实很多人都会有传统管理法局限性带来的困惑和无奈，\u003c/li\u003e\n\u003cli\u003e自己也一直在想如何突破，没有想到有人已经想到了。标签组数组化_我来取个名字，这个思路很棒\u003c/li\u003e\n\u003cli\u003e我最近在想，博客是标签组的最佳表达方式，观看也很棒，笔记类软件太密集，展示表达差一点。\u003c/li\u003e\n\u003cli\u003e双向链接能否用到博客中，我这里说的是本地博客，相当于笔记软件哪种。目前学习使用hexo\u003c/li\u003e\n\u003cli\u003emd格式文档库，博客软件来实现组织应用。\u003c/li\u003e\n\u003cli\u003e搜索 博客双向链接，看看有没有收获。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003e2021-01-22 于重庆民安华福\u003c/em\u003e\u003c/p\u003e\n","permalink":"/via/20210122a%E5%85%B3%E4%BA%8Eobsidian/","title":"关于Obsidian知识循环利器"},{"htmlString":"","permalink":"/tags/%E7%9F%A5%E8%AF%86%E5%BE%AA%E7%8E%AF/","title":"知识循环"},{"htmlString":"","permalink":"/tags/%E7%AC%94%E8%AE%B0%E4%BA%A4%E4%BA%92/","title":"笔记交互"},{"htmlString":"\u003cp\u003eFront-matter就是文件最上方的分割区域。\u003c/p\u003e\n","permalink":"/hexo/20210121b_front-matter/","title":"front-matter"},{"htmlString":"\u003cp\u003e配置文件注释\n_config.yml\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# Hexo Configuration\r\n## Docs: https://hexo.io/docs/configuration.html\r\n## Source: https://github.com/hexojs/hexo/\r\n\r\n# Site网站\r\ntitle: chr63写点人生note #网站标题\r\nsubtitle: '忽然春天，蓦然夏天，突然秋天，已然冬天。' #副标题\r\ndescription: '事出有因，未必结果。' #网站描述\r\nkeywords: 笔记 #网站关键词\r\nauthor: chr63 #作者\r\nlanguage: zh-CN #使用语言\r\ntimezone: 'Asia/Shanghai' #时区\r\n\r\n# URL网址\r\nroot: / #网站根目录\r\npermalink: :year/:month/:day/:title/ #永久链接格式\r\npermalink_defaults: #永久链接中各部分默认值\r\npretty_urls: #改写permalink的值来美化url\r\n  trailing_index: true #是否保留尾部index.html\r\n  trailing_html: true #是否保留尾部.html\r\n\r\n# Directory目录\r\nsource_dir: source #资源文件夹\r\npublic_dir: public #公共文件夹\r\ntag_dir: tags #标签\r\narchive_dir: archives #归档文件夹\r\ncategory_dir: categories #分类文件夹\r\ncode_dir: downloads/code #source子文件夹\r\ni18n_dir: :lang #国际化文件夹\r\nskip_render: #跳过指定文件的渲染\r\n\r\n# Writing文章\r\nnew_post_name: :year:month:day-:title.md\n# :year:month:day-:title.md新文章名格式\r\n# hexo new [layout]\u0026lt;title\u0026gt;，\n# post/page/draft\r\ndefault_layout: post #预设布局\r\ntitlecase: false #把标题转换为title case\r\nexternal_link:\r\n  enable: true #在新标签中打开\r\n  field: site #对网站site/文章post 生效\r\n  exclude: '' #需要排除的域名\r\nfilename_case: 0 #文件名转换为1小写2大写\r\nrender_drafts: false #显示草稿\r\npost_asset_folder: false #启动asset文件夹\r\nrelative_link: false #把链接改为与根目录的相对位置\r\nfuture: true #显示未来的文章\r\nhighlight: #代码块设置\r\n  enable: true\r\n  line_number: true\r\n  auto_detect: false\r\n  tab_replace: ''\r\n  wrap: true\r\n  hljs: false\r\nprismjs:   #代码块设置\r\n  enable: false\r\n  preprocess: true\r\n  line_number: true\r\n  tab_replace: ''\r\n\r\n# Home page setting\r\n# path: Root path for your blogs index page. (default = '')\r\n# per_page: Posts displayed per page. (0 = disable pagination)\r\n# order_by: Posts order. (Order by date descending by default)\r\nindex_generator:  #主页设置\r\n  path: ''\r\n  per_page: 1\r\n  order_by: -date\r\n\r\n# Category \u0026amp; Tag 分类和标签\r\ndefault_category: uncategorized\r\ncategory_map:\r\ntag_map:\r\n\r\n# Metadata elements\r\n## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\r\nmeta_generator: true\r\n\r\n# Date / Time format\r\n\r\ndate_format: YYYY.MM.DD\r\ntime_format: HH:mm:ss\r\n## updated_option supports 'mtime', 'date', 'empty'\r\nupdated_option: 'mtime' #文件更新时间\r\n\r\n# Pagination分页目录\r\nper_page: 10\r\npagination_dir: page\r\n\r\n# Include / Exclude file(s)\r\n## 忽略或处理某些目录和文件夹\r\ninclude:\r\nexclude:\r\nignore:\r\n\r\n# Extensions主题\r\ntheme: chr1\r\n# 主题收藏 landscape heri noise essence geek oranges \r\n# 记得一键3连 hexo clean \u0026amp;\u0026amp; hexo g \u0026amp;\u0026amp; hexo s\r\n\r\n# Deployment部署\r\ndeploy:\r\n  type: ''\r\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e我添加了中文注释，方便以后查阅\u003c/p\u003e\n","permalink":"/hexo/20210121a%E6%B3%A8%E9%87%8Ahexo%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","title":"配置文件注释"},{"htmlString":"\n\u003ch3 id=\"被拖延的博客梦\"\u003e\u003ca href=\"#%e8%a2%ab%e6%8b%96%e5%bb%b6%e7%9a%84%e5%8d%9a%e5%ae%a2%e6%a2%a6\"\u003e被拖延的博客梦\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e想自己做一个博客，纯小白，什么都不懂，看到那些代码，没有人教，的确也是一个头2个大。\u003c/p\u003e\n\n\u003ch3 id=\"从零开始设置github-page\"\u003e\u003ca href=\"#%e4%bb%8e%e9%9b%b6%e5%bc%80%e5%a7%8b%e8%ae%be%e7%bd%aegithub-page\"\u003e从零开始设置github page\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e从网络上，无意中了解到，github可以写博客，一直不懂，搞不明白，博客怎么弄的，en就是一个障碍，最近给firefox弄了一个插件网页翻译，问题缓解了好多。\u003c/p\u003e\n\u003cp\u003egithub 可以做静态的博客，意思就是，把写好的东西，保存到github上，网页只是读取文件，显示。\u003c/p\u003e\n\u003cp\u003egithub page博客，网址是 \u003c!-- raw HTML omitted --\u003e.github.io  ，所以在github上新建一个 \u003c!-- raw HTML omitted --\u003e.github.io  而且name必须是自己的用户名。\u003c/p\u003e\n\u003cp\u003e有了上面的项目，github.io，就可以展示写的博客了。\u003c/p\u003e\n\u003cp\u003e这个时候，知道有一个静态博客模板的东西，我才知道，写博客，发布，博客主题样式，都可以用这样的系统来生成，我就只需要写内容，再也不用那些复杂的操作了。\u003c/p\u003e\n\u003cp\u003e第一个接触到的就是hexo。\u003c/p\u003e\n\n\u003ch3 id=\"hexo初遇\"\u003e\u003ca href=\"#hexo%e5%88%9d%e9%81%87\"\u003ehexo初遇\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e遇到hexo也是一个个人觉得搞笑的过程。某天，我手机 \u003cstrong\u003e酷安\u003c/strong\u003e发现一个叫 termux的软件，通过搜索发现用termux在手机上搭建博客，当然就是认识hexo契机。\u003c/p\u003e\n\u003cp\u003e这个时候，我还才知道手机都能建立博客，维护博客了，电脑应该更加方便的。\u003c/p\u003e\n\u003cp\u003e在termux上用hexo建立了博客，但是太丑了，于是又搜索，知道主题，又浏览了很多的主题。\u003c/p\u003e\n\u003cp\u003e直到，一直找不到合适的\u003c/p\u003e\n","permalink":"/hexo/20210120b%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bhexo/","title":"从零开始hexo"},{"htmlString":"\n\u003ch3 id=\"hexo主题收藏\"\u003e\u003ca href=\"#hexo%e4%b8%bb%e9%a2%98%e6%94%b6%e8%97%8f\"\u003ehexo主题收藏\u003c/a\u003e\u003c/h3\u003e\u003cpre\u003e\u003ccode\u003e# 喜欢的都收藏一下\n# 设置好以后记得一键三连：hexo clean \u0026amp;\u0026amp; hexo g \u0026amp;\u0026amp; hexo s\n\nhttps://github.com/zchengsite/hexo-theme-oranges\n\n\ngit clone https://github.com/joway/hugo-theme-yinyang.git themes/yinyang\n\nhttps://github.com/sshwy/hexo-theme-essence\n\nhttps://github.com/ganto-cn/hexo-theme-heri\n\ngit clone https://github.com/lotabout/hexo-theme-noise themes/noise\n# 好评，简单，喜欢\n\nhttps://github.com/sanjinhub/hexo-theme-geek\n# 自带 valine 评论 , 使用说明见 https://valine.js.org 评论系统key 申请https://valine.js.org/quickstart.html\n\npolk-x\n# 极简，一般\n\n---\n# https://github.com/FoxerLee/awesome-hexo-themes\n# 推荐主题，收集页面\n----\n\n\n\ngit clone https://github.com/gary-Shen/hexo-theme-bear themes/bear.git\n\ngit clone https://github.com/JeremyFan/hexo-theme-still.git\n\ngit clone https://github.com/frostfan/hexo-theme-polarbear.git\n\ngit clone https://github.com/Litreily/hexo-theme-snark.git\n# 需要查看网页，配置\n\nhttps://github.com/honjun/hexo-theme-sakura\nhttps://docs.hojun.cn/sakura/docs/#/home\n# 文档\n\nhttps://github.com/fengkx/hexo-theme-purer\n好看，但是还没有测试成功\n\nhttps://github.com/KevinOfNeu/hexo-theme-xoxo\n手机上看还行\n\nhttps://github.com/jangdelong/hexo-theme-xups\n带github评论系统\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e1.26\u003c/p\u003e\n\u003cp\u003egit clone \u003ca href=\"https://github.com/zhwangart/hexo-theme-ocean.git\"\u003ehttps://github.com/zhwangart/hexo-theme-ocean.git\u003c/a\u003e themes/ocean\u003c/p\u003e\n\n\u003ch3 id=\"喜欢的主题\"\u003e\u003ca href=\"#%e5%96%9c%e6%ac%a2%e7%9a%84%e4%b8%bb%e9%a2%98\"\u003e喜欢的主题\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003eoranges\u003c/li\u003e\n\u003cli\u003egeek\u003c/li\u003e\n\u003cli\u003eheri\u003c/li\u003e\n\u003cli\u003eessence 哈希值\u003c/li\u003e\n\u003cli\u003ecafe\u003c/li\u003e\n\u003cli\u003enoise\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/hexo/20210118hexo%E4%B8%BB%E9%A2%98%E6%94%B6%E8%97%8F/","title":"hexo主题收藏"},{"htmlString":"","permalink":"/tags/adb/","title":"adb"},{"htmlString":"\n\u003ch3 id=\"termux-adb\"\u003e\u003ca href=\"#termux-adb\"\u003eTermux-ADB\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e在Termux中安装ADB和FastBoot工具！\n仅适用于配备ARM或ARM64处理器的设备！\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/MasterDevX/Termux-ADB\"\u003ehttps://github.com/MasterDevX/Termux-ADB\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3 id=\"heading\"\u003e\u003ca href=\"#heading\"\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003ch3 id=\"如何安装\"\u003e\u003ca href=\"#%e5%a6%82%e4%bd%95%e5%ae%89%e8%a3%85\"\u003e如何安装\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e静默安装：\u003c/strong\u003e\n在Termux中复制并粘贴以下命令以静默安装工具：\n\u003ccode\u003eapt update \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; apt --assume-yes  install wget \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; wget  https://github.com/MasterDevX/Termux-ADB/raw/master/InstallTools.sh -q  \u0026amp;\u0026amp; bash InstallTools.sh\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e常用安装：\u003c/strong\u003e\n在Termux中复制并粘贴以下命令以安装带有日志输出的工具：\n\u003ccode\u003eapt update \u0026amp;\u0026amp; apt install wget \u0026amp;\u0026amp; wget  https://github.com/MasterDevX/Termux-ADB/raw/master/InstallTools.sh  \u0026amp;\u0026amp; bash InstallTools.sh\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"heading-1\"\u003e\u003ca href=\"#heading-1\"\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003ch3 id=\"如何卸载\"\u003e\u003ca href=\"#%e5%a6%82%e4%bd%95%e5%8d%b8%e8%bd%bd\"\u003e如何卸载\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e静默卸载：\u003c/strong\u003e\n在Termux中复制并粘贴以下命令以静默删除工具：\n\u003ccode\u003eapt update \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; apt --assume-yes  install wget \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; wget  https://github.com/MasterDevX/Termux-ADB/raw/master/RemoveTools.sh -q  \u0026amp;\u0026amp; bash RemoveTools.sh\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e常见卸载：\u003c/strong\u003e\n在Termux中复制并粘贴以下命令，以删除带有日志输出的工具：\n\u003ccode\u003eapt update \u0026amp;\u0026amp; apt install wget \u0026amp;\u0026amp; wget  https://github.com/MasterDevX/Termux-ADB/raw/master/RemoveTools.sh  \u0026amp;\u0026amp; bash RemoveTools.sh\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"heading-2\"\u003e\u003ca href=\"#heading-2\"\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003ch3 id=\"学分\"\u003e\u003ca href=\"#%e5%ad%a6%e5%88%86\"\u003e学分\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/MasterDevX\"\u003eMasterDevX- \u003c/a\u003e脚本开发。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/osm0sis\"\u003eosm0sis- \u003c/a\u003e二进制编译。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/chameleonbr\"\u003echameleonbr- \u003c/a\u003e想法的作者。\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/termux/20210120a%E5%85%B3%E4%BA%8Etermux-adb/","title":"Termux-ADB"},{"htmlString":"","permalink":"/termux/","title":"📱 安卓终端termux"},{"htmlString":"\n\u003ch3 id=\"hexo更换主题失败总结\"\u003e\u003ca href=\"#hexo%e6%9b%b4%e6%8d%a2%e4%b8%bb%e9%a2%98%e5%a4%b1%e8%b4%a5%e6%80%bb%e7%bb%93\"\u003ehexo更换主题失败总结\u003c/a\u003e\u003c/h3\u003e\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e没有按照hexo的步骤，所以失败\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e每次更换完主题后，都需要，一键三连\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehexo clean \u0026amp;\u0026amp; hexo g \u0026amp;\u0026amp; hexo s\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e原因分析\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e对于每个命令的作用不清出。\u003c/li\u003e\n\u003cli\u003ehexo静态博客模板的工作原理不清楚\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"hexo指令\"\u003e\u003ca href=\"#hexo%e6%8c%87%e4%bb%a4\"\u003ehexo指令\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e指令有步骤\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehexo init [folder]\n# 没有设置 folder ，Hexo 默认在目前的文件夹建立博客系统\n\nhexo new [layout] \u0026lt;title\u0026gt;\n# 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\nhexo new \u0026quot;hi chr63\u0026quot;\n-p, --path \t自定义新文章的路径\n-r, --replace \t如果存在同名文章，将其替换\n-s, --slug \t文章的 Slug，作为新文章的文件名和发布后的 URL\n\nhexo generate\n# 生成静态文件。网页显示的是生成静态文件，博客设置修改后，必须 hexo g 设置才能生效\n-d, --deploy \t文件生成后立即部署网站\n-w, --watch \t监视文件变动\n-b, --bail \t生成过程中如果发生任何未处理的异常则抛出异常\n-f, --force \t强制重新生成文件\nHexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。\n使用该参数的效果接近 hexo clean \u0026amp;\u0026amp; hexo generate\n-c, --concurrency \t最大同时生成文件的数量，默认无限制\n\nhexo publish [layout] \u0026lt;filename\u0026gt;\n# 发表草稿\n\nhexo server\n# 启动服务器。默认情况下，访问网址为： http://localhost:4000/\n-p, --port \t重设端口\n-s, --static \t只使用静态文件\n-l, --log \t启动日记记录，使用覆盖记录格式\n\nhexo deploy\n# 部署网站\n-g, --generate \t部署之前预先生成静态文件\n\nhexo render \u0026lt;file1\u0026gt; [file2] ...\n# 渲染文件\n-o, --output \t设置输出路径\n\nhexo clean\n# 清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n# 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\nhexo list \u0026lt;type\u0026gt;\nhexo version\nhexo --safe  安全模式\nhexo --debug  调试模式\nhexo --silent  简洁模式\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"hexo工作原理\"\u003e\u003ca href=\"#hexo%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86\"\u003ehexo工作原理\u003c/a\u003e\u003c/h3\u003e\u003col\u003e\n\u003cli\u003e静态博客模板，把需要表达的文章，按照一定机制，表现在网页上。\u003c/li\u003e\n\u003cli\u003e表现的都是 缓存文件 (db.json) 和已生成的静态文件 (public)\u003c/li\u003e\n\u003cli\u003e每次修改博客设置后，都需要把旧的设置清除：hexo clean\u003c/li\u003e\n\u003cli\u003e新设置生效，需要生成静态文件：hexo generate\u003c/li\u003e\n\u003cli\u003e最后看效果，需要启动服务：hexo server\u003c/li\u003e\n\u003cli\u003e打开浏览器查看效果。\u003c/li\u003e\n\u003cli\u003e合并3-5步骤，简化：hexo clean \u0026amp;\u0026amp; hexo g \u0026amp;\u0026amp; hexo s\u003c/li\u003e\n\u003c/ol\u003e\n","permalink":"/hexo/20210118hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%A4%B1%E8%B4%A5%E5%88%86%E6%9E%90/","title":"hexo更换主题失败总结"},{"htmlString":"\n\u003ch3 id=\"关于npm镜像源的问题\"\u003e\u003ca href=\"#%e5%85%b3%e4%ba%8enpm%e9%95%9c%e5%83%8f%e6%ba%90%e7%9a%84%e9%97%ae%e9%a2%98\"\u003e关于npm镜像源的问题\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e当你下载某个\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003enpm install hexo-render-swig\nnpm ERR! code E404\nnpm ERR! 404 Not Found - GET https://registry.npmjs.org/hexo-render-swig - Not found\nnpm ERR! 404\nnpm ERR! 404  'hexo-render-swig@latest' is not in the npm registry.\nnpm ERR! 404 You should bug the author to publish it (or use the name yourself!)\nnpm ERR! 404\nnpm ERR! 404 Note that you can also install from a\nnpm ERR! 404 tarball, folder, http url, or git url.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e结果下载失败。原来问题处在无法访问源网站上 \u003ca href=\"https://registry.npmjs.org/\"\u003ehttps://registry.npmjs.org/\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3 id=\"工具-nrm-管理\"\u003e\u003ca href=\"#%e5%b7%a5%e5%85%b7-nrm-%e7%ae%a1%e7%90%86\"\u003e工具 nrm 管理\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e安装nrm 管理，安装这个的前提是能确定链接到现在的镜像地址：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003enpm install -g nrm\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e待安装完nrm 之后，通过nrm 管理镜像的地址，一条命令切换，如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003enrm use taobao\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003enrm 除了淘宝站点镜像之外还有其他的，可以使用一下命令查看：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003enrm ls\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e呃，使用 sudo apt-get install npm 安装好npm之后就想把 nrm 安装好，结果安装好 nrm 之后，便执行起上面的那条命令，然后发现提示没有找到 nrm 命令 -_-|| 好吧，原来是忘了安装 node 了。\u003c/p\u003e\n\u003cp\u003e下载 node，如下载 0.12.7版的 .tar.gz 压缩包：\u003c/p\u003e\n\u003cp\u003e解压：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003etar zxvf node-v0.12.7.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e转到解压后的文件夹中之后：\u003c/p\u003e\n\u003cp\u003e./configure \u0026ndash;prefix=/usr/node\u003c/p\u003e\n\u003cp\u003e\u0026ndash;prefix=/usr/node 是指定安装后命令路径，使用默认的话可以不用，即只执行 ./configure 便可。\u003c/p\u003e\n\u003cp\u003e编译，以及安装（前提是有 g++/gcc 编译工具）：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esudo make \u0026amp;\u0026amp; make install\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003enrm use taobao\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n* taobao - http://registry.npm.taobao.org/\n  edunpm - http://registry.enpmjs.org/\n  eu ----- http://registry.npmjs.eu/\n  au ----- http://registry.npmjs.org.au/\n  sl ----- http://npm.strongloop.com/\n  nj ----- https://registry.nodejitsu.com/\n  pt ----- http://registry.npmjs.pt/\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"中科大镜像站的-npm\"\u003e\u003ca href=\"#%e4%b8%ad%e7%a7%91%e5%a4%a7%e9%95%9c%e5%83%8f%e7%ab%99%e7%9a%84-npm\"\u003e中科大镜像站的 npm\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e编辑 ~/.npmrc ，添加\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eregistry=http://npmreg.mirrors.ustc.edu.cn/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e若不想将本源设置为默认源，只想使用本源安装某个软件包，可在安装包时采用以下用法：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003enpm --registry http://npmreg.mirrors.ustc.edu.cn install \u0026lt;packagename\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e中科大 npm 镜像支持 https 安全连接，如果您的网络运营商部署了缓存设备，或您对所处的网络环境不信任，请使用 https 替换上述 URL1 中的 http 。\u003c/p\u003e\n\n\u003ch3 id=\"淘宝镜像\"\u003e\u003ca href=\"#%e6%b7%98%e5%ae%9d%e9%95%9c%e5%83%8f\"\u003e淘宝镜像\u003c/a\u003e\u003c/h3\u003e\u003cpre\u003e\u003ccode\u003e淘宝镜像: \nhttp://registry.npm.taobao.org\n临时\nnpm --registry http://registry.npm.taobao.org install \u0026lt;packagename\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"单次使用\"\u003e\u003ca href=\"#%e5%8d%95%e6%ac%a1%e4%bd%bf%e7%94%a8\"\u003e单次使用\u003c/a\u003e\u003c/h3\u003e\u003cpre\u003e\u003ccode\u003enpm install --registry=https://registry.npm.taobao.org\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"永久使用\"\u003e\u003ca href=\"#%e6%b0%b8%e4%b9%85%e4%bd%bf%e7%94%a8\"\u003e永久使用\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e设置成全局的下载镜像站点，这样每次install的时候就不用加\u0026ndash;registry，默认会从淘宝镜像下载，设置方法如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e1.文件法\n打开.npmrc文件（nodejs\\node_modules\\npm\\npmrc，没有的话可以使用git命令行建一个( touch .npmrc)，用cmd命令建会报错）\n增加 registry =https://registry.npm.taobao.org  即可。\n2.代码法\nnpm config set registry https://registry.npm.taobao.org\n3.检查\n// 配置后可通过下面方式来验证是否成功\nnpm config get registry\n// 或\nnpm info express\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/termux/20210118%E5%85%B3%E4%BA%8Enpm%E9%95%9C%E5%83%8F%E6%BA%90/","title":"关于npm镜像源"},{"htmlString":"\n\u003ch3 id=\"20140924\"\u003e\u003ca href=\"#20140924\"\u003e2014.09.24\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e当手机锂电池开始老化时，\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一般表现为手机空载时显示电压基本正常，满格，\u003c/li\u003e\n\u003cli\u003e待机时间短，\u003c/li\u003e\n\u003cli\u003e充电时很快就显示已充满。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e此类电池可尝试以下方式修复。\n冷冻法(1)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e多层吸水纸和多层塑料膜密封\u003c/li\u003e\n\u003cli\u003e放进冰箱冷冻室里（零下18度）\u003c/li\u003e\n\u003cli\u003e冻了整整二天二夜，48h\u003c/li\u003e\n\u003cli\u003e取出后连包装放室内常温二天，36h。恢复室温\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e放电法(2)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e可采取开机放电或者接电阻的方法。\u003c/li\u003e\n\u003cli\u003e开机放电应放到手机开机即停的程度；接电阻放电可采取连接相应电压的小电珠长时间放电，直到小电珠接上瞬间即灭的程度即可。\u003c/li\u003e\n\u003cli\u003e放电电流以大电流为佳。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e激活法(3)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e串接12V交流电，在电池之间还要串联一小电珠或者电阻，用于限流。\u003c/li\u003e\n\u003cli\u003e首先采用小电流激活，使控制回路交流电为数十毫安，维持30到60分钟，\u003c/li\u003e\n\u003cli\u003e然后加大电流到电池的标称值的1~2倍。\u003c/li\u003e\n\u003cli\u003e例如，1000毫安时的电池加至1000~2000毫安，激活30~60分钟。\u003c/li\u003e\n\u003cli\u003e在上述过程中应注意观察电池的温度和外观：应无发烫、冒烟、鼓包等异常现象，如温度过高（40℃以上）应适当减低电流。\u003c/li\u003e\n\u003cli\u003e经过上述激活处理的锂电池一般均可以正常使用，但不能与新电池相比！\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"20180528\"\u003e\u003ca href=\"#20180528\"\u003e2018.05.28\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e电池看起来是“死”了，但也有很大概率能救活。我总结出来的方法是：用等于电池设计电压的直流电对电池充电。\u003c/li\u003e\n\u003cli\u003e这种“死”去的电池，用原装充电器是充不进电的（根本没电流通过），但是用等于电池设计电压的直流电对电池充电就会发现有比较大的电流，而且这个充电电流会慢慢减少，数分钟后接近0，这是一个好消息：电池电压正在恢复到设计水平。\u003c/li\u003e\n\u003cli\u003e这时候停止充电，再用万用表测量电池两极，是不是有正常电压了\u003c/li\u003e\n\u003cli\u003e然后，就可以使用原装充电器对其充电。\u003c/li\u003e\n\u003cli\u003e用这种方法，我修复了不少电池，而且，很多都能恢复到设计容量一半左右的水平。\u003c/li\u003e\n\u003cli\u003e为了彻底激活电池，还需要彻底充、放电几次。放电电路用电阻和发光二极管组成，能通过发光二极管估测放电的状态。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003e就我的经验来讲，这种方法对于第一种电池，很有效。而后面两种情况的电池，则很难修复，在网上找的资料，也很少有明显效果的。尤其是第三种“能充电，而且容量也比较充足，但是大电流放电电压下降明显（具体表现比如：用相机的拍摄模式只能坚持几分钟，而用回看模式则能坚持很久）”这种电池，丢弃的话实在可惜。\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e锂电池修复的三种方法：\u003c/strong\u003e\n1.使用干净的橡皮擦或者其他材质的清洁工具轻轻擦拭锂电池上的金属触点及手机上的金属触点，有助于充电状况及电力的持久。\n2.将用到自动关机的旧手机锂电池用保鲜膜将其牢牢裹住，包裹时尽量服帖，里外共三层，确保电池处于真空状态。然后，再在保鲜膜外面包三层报纸，使锂电池完全密封。放入冰箱的冷冻层，48小时后，取出电池，一一去掉包裹在外的六层纸膜，锂电池没有因冷冻而导致表面膨胀或变形。冷却一段时间后，然后充电。\n3.让接近报废的锂电池彻底放电，然后重新充电激活电池。具体方法为：对手机进行深度放电，就是通过耗尽内部电能，来达到更深程度的再充电，这需要采用一些非常规的方法。用特定的装置连接手机与一个低电压小灯泡，电池内部的电量会传输到小灯泡上，直到全部都放光。“手机需要通过较低的电压慢慢耗尽电能。正常情况下，手机接通后若低于3.6伏的额定电压，就会自动关机。”放完电后，再次充电的手机电池可以使用更长时间。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e三种锂电池修复方法原理：\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e锂电池修复方法一的原理：长时间使用的锂电池的金属表面会有一定程度的氧化，导致手机电池跟手机接触不好，锂电池使用时间变短，而用橡皮檫或其他清洁工具可擦除表面的生锈物质，让电池与手机接触变好。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e锂电池修复方法二的原理：浙江大学物理学系的叶高翔教授关于此锂电池“冰冻疗法”的专业解释：“低温能使锂电池内部的电解液发生变化，促进刚刚经过冷冻的电池发生化学反应。锂电池的使用过程其实是一个充放电过程。在这期间，电池内的阴电荷和阳电荷相互交撞。电池之所以会越来越不经用，是因为在正常的室温下，电子内部的动能比较大，因而电池处于活跃状态，漏电情况相对频繁。而将锂电池放入低温环境里，锂电池表面的锂膜与电解液的微观结构，以及它们的交界面都会发生明显变化，导致电池内部暂不活跃，漏电流减少。所以再次充电后，手机的待电时间会增加。\u003cbr\u003e\n锂电池的循环使用寿命约600多次。如果充电次数多了，分子的热运动会使其内部分子排列微观结构逐渐被破坏，存储电荷效率会渐渐降低。而“冷冻的过程容易破坏电池原来的内部结构，短时间内或许可以增加充载电荷的能力，但长期使用未必有效。”叶教授说，锂电池内的微观结构一旦被破坏，再要完全恢复过来是不可能的，长期使用这种方法会加速手机电池的损耗。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e锂电池修复方法三的原理：对手机进行深度放电，就是通过耗尽内部电能，来达到更深程度的再充电，这需要采用一些非常规的方法。想办法将手机与一个1.5V小灯泡相连，锂电池内部的电量会传输到小灯泡上，直到全部都放光。“手机需要通过较低的电压慢慢耗尽电能。正常情况下，手机接通后若低于3.6伏的额定电压，就会自动关机。”放完电后，再次充电的手机电池可以使用更长时间。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e手机锂电池修复\u0026ndash;”冰冻疗法”全过程解析:\u003c/strong\u003e\n2009年4月份买的诺基亚BL-5C原装锂电池作为实验对象。该锂电池已经使用了近两年，正常使用的情况下，这部手机的待机时间维持一天左右。如果通话次数比较多，电量持续的时间会更短。如果平均每个电话的通话时间为3分钟，接听或拨打10次，电量就岌岌可危。\u003c/p\u003e\n\u003cp\u003e　　测试前，将手机关机，在电量充满后再开机。此后，不用这部手机接听和拨打任何电话，也不收发短信。在没有任何干扰的状态下，手机安静地待机，将近3天后完全没电。\u003c/p\u003e\n\u003cp\u003e　　进入实验阶段：把全身装备好的手机锂电池放入冰箱的冷冻格（为防止锂电池受潮，需要先用保鲜膜将手机牢牢裹住，包裹时尽量服帖，里外共需三层，确保锂电池处于真空状态。然后，再在保鲜膜外面包三层报纸，使手机电池完全密封）。48小时后，取出锂电池，一一去掉包裹在外的六层纸膜，电池没有因冷冻而导致表面膨胀或变形。冷却一段时间后，把锂电池装入手机充满并开机。同样情况下，第三天时原本会自动关机的手机，屏幕上才少了一格电。一个星期后，手机屏幕上还剩余一格电。到了第九天，手机才因电量不足发出提示音。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e“冰冻疗法”测试前后的表现验证了一点：\u003c/strong\u003e\n第一次经过冰冻的电池可以延长手机的待电时间。但冰冻并非手机电池的“不死仙丹”，长期使用会损坏锂电池。\u003c/p\u003e\n\u003cp\u003e　　专家提醒锂电池的价格并不算太高，与其费力进行锂电池修复，不如购买一块新电池来得方便划算。此外，养成良好的使用习惯，也是延长锂电池寿命的一条捷径。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e？？？\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e　　把电池取出来用座充单独充电，充一段时间之后再用一个20到30欧的电阻连接正负极放电。一般连续几次充放电之后可激活电池。如果几次充放电之后仍无法正常充电，那电池就是坏的了。\u003c/p\u003e\n\u003cp\u003e　　找一块满电的锂电池和3根细铜丝，用透明胶将两根细铜丝粘在该电池的正负极上。然后找到一个几十欧姆左右的电阻，一端与正极铜丝相连，另一端再接一段铜丝。最后用透明胶将两根铜丝与没电的锂电池的正负极对应相连，充电约半个小时，取下。将取下的电池进行正常充电，如果能充电，说明OK。否则，将电池的充电保护板拆下(在有电极的一端)，找到电池芯的正负极，重复上面的充电过程。如果能充电，说明OK，焊接正负极引线，只能做实验电池。如果不能充电，将电池放入垃圾桶中，注意环保！\u003c/p\u003e\n\u003cp\u003e　　首先把电池从手机里取出来用报纸把电池包起来，最少包三层。我们用的报纸要是干燥的，不要潮湿的。\u003c/p\u003e\n","permalink":"/via/20210119b%E5%AE%89%E5%8D%93%E4%BF%AE%E5%A4%8D%E9%94%82%E7%94%B5%E6%B1%A0/","title":"安卓修复锂电池"},{"htmlString":"\n\u003ch3 id=\"2021-01-19-19365\"\u003e\u003ca href=\"#2021-01-19-19365\"\u003e2021-01-19 19/365\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003evia.平常大家都是好人，至少也是普通人，但这些人一到关键时刻就会变坏人，所以才不能大意！\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/via/20210119a%E6%91%98%E5%BD%95via/","title":"摘录"},{"htmlString":"","permalink":"/tags/%E7%94%B5%E5%AD%90/","title":"电子"},{"htmlString":"\n\u003ch3 id=\"hexo更换主题失败\"\u003e\u003ca href=\"#hexo%e6%9b%b4%e6%8d%a2%e4%b8%bb%e9%a2%98%e5%a4%b1%e8%b4%a5\"\u003ehexo更换主题失败\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e不知道为什么会失败\u003c/li\u003e\n\u003cli\u003e自带的主题都正常，那些好看的主题可能有其他插件\u003c/li\u003e\n\u003cli\u003e不知道什么问题\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003ecd /storage/emulated/0/blog\npwd\npkg install git nodejs --save --no-bin-links\nnpm install hexo-cli\nhexo init\nhexo g | hexo s\n浏览器打开本地，正常\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"更换喜欢的主题\"\u003e\u003ca href=\"#%e6%9b%b4%e6%8d%a2%e5%96%9c%e6%ac%a2%e7%9a%84%e4%b8%bb%e9%a2%98\"\u003e更换喜欢的主题：\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e主题noise\n\u003ccode\u003e简单 美观，手机端也好看\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egit clone https://github.com/lotabout/hexo-theme-noise themes/noise\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e主题polarbear\n\u003ccode\u003e简单，手机端好看\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egit clone https://github.com/frostfan/hexo-theme-polarbear themes/polarbear\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"需要解决的问题\"\u003e\u003ca href=\"#%e9%9c%80%e8%a6%81%e8%a7%a3%e5%86%b3%e7%9a%84%e9%97%ae%e9%a2%98\"\u003e需要解决的问题\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e打开页面都是代码，\u003c/li\u003e\n\u003cli\u003e太难了，看不懂，找不到问题。\u003c/li\u003e\n\u003cli\u003e在blog中  npm install 会报错，也不知道安装成功没有\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003enpm install hexo-renderer-scss --save\nnpm install hexo-renderer-less --save\nnpm install hexo-renderer-pug --save\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/termux/20210118%E5%AE%89%E5%8D%93termux%E9%83%A8%E7%BD%B2hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%A4%B1%E8%B4%A5/","title":"安卓termux部署hexo更换主题失败"},{"htmlString":"","permalink":"/tags/%E5%8D%9A%E5%AE%A2/","title":"博客"},{"htmlString":"\n\u003ch3 id=\"115\"\u003e\u003ca href=\"#115\"\u003e1.15\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://gddhy.net/\"\u003ehttps://gddhy.net/\u003c/a\u003e         良好\n\u003ca href=\"https://nanguaren.github.io\"\u003ehttps://nanguaren.github.io\u003c/a\u003e.      优秀\n\u003ca href=\"https://pumpkin_melon.gitee.io/myblog\"\u003ehttps://pumpkin_melon.gitee.io/myblog\u003c/a\u003e     \u003cbr\u003e\n\u003ca href=\"https://chitang.tk\"\u003ehttps://chitang.tk\u003c/a\u003e\n\u003ca href=\"https://www.nesxc.com\"\u003ehttps://www.nesxc.com\u003c/a\u003e\n\u003ca href=\"https://pzb568.github.io/\"\u003ehttps://pzb568.github.io/\u003c/a\u003e\n\u003ca href=\"https://htname.github.io/\"\u003ehttps://htname.github.io/\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3 id=\"116\"\u003e\u003ca href=\"#116\"\u003e1.16\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://d2fan.com/\"\u003ehttps://d2fan.com/\u003c/a\u003e      简单，优秀\u003c/p\u003e\n\n\u003ch3 id=\"117\"\u003e\u003ca href=\"#117\"\u003e1.17\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://easy4me.cn/\"\u003eeasy4me-\u003c/a\u003e\n\u003ccode\u003e基于 Hexo 主题\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://4ark.me/\"\u003e4ark-Polarbear\u003c/a\u003e \u003ccode\u003e基于 Hexo Polarbear 主题改造\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.runoob.com/nodejs/nodejs-npm.html\"\u003erunoob-npm镜像源\u003c/a\u003e\n\u003ccode\u003enpm安装不上原来是玄学问题，需要国内源\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e​\u003c/p\u003e\n\n\u003ch3 id=\"120\"\u003e\u003ca href=\"#120\"\u003e1.20\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://blog.umu618.com/\"\u003ehttps://blog.umu618.com/\u003c/a\u003e\u003c/p\u003e\n","permalink":"/hexo/20210117%E5%8D%9A%E5%AE%A2%E6%94%B6%E8%97%8F/","title":"博客收藏"},{"htmlString":"\n\u003ch3 id=\"在终端输出所有unicode码\"\u003e\u003ca href=\"#%e5%9c%a8%e7%bb%88%e7%ab%af%e8%be%93%e5%87%ba%e6%89%80%e6%9c%89unicode%e7%a0%81\"\u003e在终端输出所有Unicode码\u003c/a\u003e\u003c/h3\u003e\u003cp\u003ea).\n#!/bin/bash\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor i1 in {0..9} {A..F}\ndo\nfor i2 in {0..9} {A..F}\ndo\nfor i3 in {0..9} {A..F}\ndo\nfor i4 in {0..9} {A..F}\ndo\necho -ne \\\\u$i1$i2$i3$i4\ndone\ndone\ndone\ndone\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eb).\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eprintf $(printf '\\\\u%04x' {0..65535})\n\u003c/code\u003e\u003c/pre\u003e","permalink":"/termux/20210117%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84termux/","title":"在终端输出所有Unicode码"},{"htmlString":"","permalink":"/tags/%E7%AC%A6%E5%8F%B7%E7%BC%96%E7%A0%81/","title":"符号编码"},{"htmlString":"\n\u003ch3 id=\"用termux在安卓手机实现hexo博客\"\u003e\u003ca href=\"#%e7%94%a8termux%e5%9c%a8%e5%ae%89%e5%8d%93%e6%89%8b%e6%9c%ba%e5%ae%9e%e7%8e%b0hexo%e5%8d%9a%e5%ae%a2\"\u003e用termux在安卓手机实现hexo博客\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e安卓安装termux.apk\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在手机安装了 termux 的apk，实现了 安卓手机的linnux终端。\u003c/p\u003e\n\u003cp\u003e注意，网上的教程中，第一次打开软件会连接官网，但是官网被墙，～…～，新版本不需要连接，省略这些攻略\u003c/p\u003e\n\u003cp\u003e连接国外插件，网速慢，需要连接国内镜像站，清华镜像。\u003c/p\u003e\n\u003cp\u003e新版本直接执行命令行即可：\u003c/p\u003e\n\u003cp\u003e1.编辑\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/data/data/com.termux/files/usr/etc/apt/sources.list\u003c/code\u003e\n为如下内容\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# The termux repository mirror from TUNA:\ndeb [arch=all,arm] http://mirrors.tuna.tsinghua.edu.cn/termux stable main\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e2.你也可以使用 sed 命令进行文本替换：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esed -i 's@^\\(deb.*stable main\\)$@#\\1\\ndeb https://mirrors.ustc.edu.cn/termux stable main@' $PREFIX/etc/apt/sources.list\npkg up\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e注：Termux 会自动将环境变量 $PREFIX 设定为 /data/data/com.termux/files/usr\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e利用termux安装了 hexo，就可以写博客了。\u003c/p\u003e\n\u003cp\u003ehexo的博客文件夹，要放在可以修改的地方，\u003c/p\u003e\n\u003cp\u003e其中有个很关键的命令：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003enpm install \u0026ndash;save \u0026ndash;no-bin-links\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e步骤1\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e安卓手机上安装 termux 也是技术活，我夜折腾了好久，后期把步骤补充齐全\u003c/p\u003e\n\u003cp\u003e主要是网上提到的，连接主站，不成功，软件激活不成功，\u003c/p\u003e\n\u003cp\u003e我也是因为，最新版的软件不需要连接主站了，所以才可以安装成功的。\u003c/p\u003e\n\u003cp\u003e但是还是要更改配置，设置国内镜像站，这样很多插件更新就快多了\u003c/p\u003e\n\u003cp\u003e用清华镜像站\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e步骤2\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e通过termux 安装hexo\u003c/p\u003e\n\u003cp\u003e需要安装git、nodejs\u003c/p\u003e\n\u003cp\u003e命令行：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003epkg install git\u003c/p\u003e\n\u003cp\u003epkg install nodejs\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e然后涉及到hexo博客的文件夹安装位置，\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ecd ~/blog\u003c/p\u003e\n\u003cp\u003epwd\u003c/p\u003e\n\u003cp\u003enpm install \u0026ndash;save \u0026ndash;no-bin-links\u003c/p\u003e\n\u003cp\u003enpm install hexo-cli -g\u003c/p\u003e\n\u003cp\u003ehexo init\u003c/p\u003e\n\u003cp\u003ehexo g\u003c/p\u003e\n\u003cp\u003ehexo s\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e第一次梳理可能有遗漏，大概就是这样的过程，但是从一个小白的角度来说，是看了大量的文字，翻阅了很多的网站才完整这几个简单设置的。\u003c/p\u003e\n\u003cp\u003ehexo 安装好了，每次需要观看时候，就在termux 中 cd到 blog文件夹，\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ehexo s\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e就能通过   :4000 打开本地的网页，局域网也可以通过 192.168.19.216:4000 查看\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e步骤3\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ehexo的原始页面是en的，需要修改配置文件，或者更换主题，用中文 zh-CN\u003c/p\u003e\n\u003cp\u003e查看 hexo.io 官方文档，可以收获很多数据\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e步骤4\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e关于便捷博客发表文章。\u003c/p\u003e\n\u003cp\u003e安卓端\u003c/p\u003e\n\u003cp\u003ewin端\u003c/p\u003e\n\u003cp\u003e安卓和win端可以用 syncthing 同步数据，win端修改手机上的数据\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e步骤5\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e待完善\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/1.jpg\" alt=\"image\"\u003e\u003c/p\u003e\n\u003cp\u003etu\u003c/p\u003e\n","permalink":"/hexo/20210114%E5%AE%89%E5%8D%93hexo%E5%8D%9A%E5%AE%A2/","title":"20210114a用termux实现hexo"},{"htmlString":"","permalink":"/tags/termux/","title":"termux"},{"htmlString":"","permalink":"/tags/github/","title":"github"},{"htmlString":"\n\u003ch3 id=\"20200611\"\u003e\u003ca href=\"#20200611\"\u003e2020.06.11\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e什么时候开始呢， 那就从 \u003ca href=\"https://github.com/ch38r18/study_Script_ch38r18/wiki\"\u003e我的WiKi\u003c/a\u003e 开始吧。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"2020-06-22-125523\"\u003e\u003ca href=\"#2020-06-22-125523\"\u003e2020-06-22 12:55:23\u003c/a\u003e\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e修改一个地址 ch38r18.github.io 以后可以用 \u003ca href=\"http://ch38r18.github.io\"\u003ehttp://ch38r18.github.io\u003c/a\u003e 直接打开\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/note/20200611githubpages%E5%BC%80%E5%A7%8B/","title":"github pages 开始"},{"htmlString":"","permalink":"/weasel/","title":"⌨ 小狼毫输入法"},{"htmlString":"\n\u003ch3 id=\"配置emoji\"\u003e\u003ca href=\"#%e9%85%8d%e7%bd%aeemoji\"\u003e配置emoji\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e方法一：\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e1.文件夹opencc 放到用户目录 如：D:\\Date\\Rime\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e2.文件emoji_suggestion.yaml 放到用户目录 如：D:\\Date\\Rime\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e3.在需要使用的输入法自定义配置文件 如 D:\\Date\\Rime\\terra_pinyin.custom.yaml\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注意格式，空2格，只有patch顶格写。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003epatch:\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e__include: emoji_suggestion:/patch    #执行emoji导入看看效果\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e重新部署，生效\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e方法二：\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e1.文件夹opencc 放到用户目录 如：D:\\Date\\Rime\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e2.在需要使用的输入法自定义配置文件 如 D:\\Date\\Rime\\terra_pinyin.custom.yaml\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e把 emoji_suggestion.yaml 内容都粘贴进去，自己注意格式问题\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e重新部署，生效\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e实现效果\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e安装成功后，根据文件关键字，提供对应图形表情，例如 一家 会变换成对应图形图像\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e快捷开关设置\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e输入状态，左Ctrl实现有无emoji\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e测试可以正常使用使用 地球拼音terra_pinyin  20200611165540\u003c/p\u003e\n","permalink":"/weasel/20200611b%E5%B0%8F%E7%8B%BC%E6%AF%ABweasel-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8emoji/","title":"小狼毫weasel-如何使用emoji"},{"htmlString":"\n\u003ch3 id=\"配置符号\"\u003e\u003ca href=\"#%e9%85%8d%e7%bd%ae%e7%ac%a6%e5%8f%b7\"\u003e配置符号\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e输入法默认输入符号方式\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e1.系统默认输入方式 如 /fh\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e2.就是半角/   和 0-10数字，字母组合。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e3.问题来了，小狼毫默认输入/效率很低\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e4.如果默认第一个 / 就是 半角/ 那么问题就很简单，方法如下\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e步骤：\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e1.在使用的输入法方案配置文件，如地球拼音 terra_pinyin.custom.yaml\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e2.加入代码，注意格式，每行前的空格数量问题2，4，6\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cpre\u003e\u003ccode\u003e                    patch:\n                      ...\n                      punctuator:\n                        full_shape:\n                          \u0026quot;/\u0026quot;: [ \u0026quot;/\u0026quot;, \u0026quot;／\u0026quot;, \u0026quot;÷\u0026quot; ] \n                        half_shape:\n                          \u0026quot;/\u0026quot;: [ \u0026quot;/\u0026quot;, \u0026quot;、\u0026quot;, \u0026quot;／\u0026quot;, \u0026quot;÷\u0026quot; ] \n                        symbols:\n                          \u0026quot;/v1\u0026quot;: [\u0026quot;\u0026lt;(￣︶￣)↗\u0026quot;, \u0026quot;(o′ω`o)ノ\u0026quot;, \u0026quot;(^人^)\u0026quot; ]\n                        import_preset: symbols\n                      recognizer:\n                        import_preset: default\n                        patterns:\n                          punct:  \u0026quot;^/([0-9A-Za-z]{1,5})$\u0026quot; \n                      ... \n\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cimg src=\"http://ys-f.ys168.com/607857155/mdj9NLm326L435K7GMM5/20200611172501.png\" alt=\"代码空格说明\"\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e​\t\t3.重新部署实现\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e​\t\t4.切换到输入法中文，按键 1/ 2f 3h   3次按键就可以翻页选择对应符号了\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e​\t测试有效 地球拼音terra_pinyin  20200611171603\u003c/p\u003e\n","permalink":"/weasel/20200611a%E5%B0%8F%E7%8B%BC%E6%AF%ABweasel-%E6%80%8E%E4%B9%88%E8%BE%93%E5%85%A5%E7%AC%A6%E5%8F%B7/","title":"小狼毫weasel-怎么输入符号"},{"htmlString":"","permalink":"/tags/%E8%BE%93%E5%85%A5%E6%B3%95/","title":"输入法"},{"htmlString":"\u003cp\u003e\u003cstrong\u003e写在开头\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e我希望自己多懂点\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e不好意思我是一个有点懂的小白，喜欢折腾一些小东西\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e让后把自己的一些尝试，写出来\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e有喜欢的，可以一起探讨、借鉴、互动\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e那天我又发现了\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e我也不知道，这里写点什么。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e我的ys168用来放图，这里可以引用，无压力，哈哈\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e很多时候都沉溺看小说，哎\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","permalink":"/note/20200609%E7%9F%A5%E9%81%93github%E4%BA%86/","title":"20200609知道github了"},{"htmlString":"","permalink":"/categories/","title":"Categories"},{"htmlString":"\u003cp\u003e   \u003c/p\u003e\n","permalink":"/photos/","title":"🏞 我的相册"},{"htmlString":"","permalink":"/regex/","title":"💾 正则表达式"}]